{
    "natural problem": "In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy]",
    "natural solution": [
        "Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));",
        "draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));",
        "draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]",
        "draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));",
        "draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.",
        "In both of the first two cases, the two leftmost columns will be covered.",
        "So, we can use this logic again, on the top left square which has not yet been covered.",
        "We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board."
    ],
    "natural answer": "8",
    "a_0": {
        "formal problem": "theorem\nfixes L_pieces :: nat and patterns :: nat\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"patterns = card {P. six_L_pieces_pattern P}\"\nand h2 : \"six_L_pieces_pattern = {P. is_valid_pattern P L_pieces 3 6}\"\nshows  \"patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes L_pieces :: nat and patterns :: nat\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"patterns = card {P. six_L_pieces_pattern P}\"\nand h2 : \"six_L_pieces_pattern = {P. is_valid_pattern P L_pieces 3 6}\"\nshows  \"patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given that there are 6 L-shaped pieces, find the number of patterns that can be formed using all of these pieces in a 3x6 grid. The final answer is 8."
    },
    "a_1": {
        "formal problem": "theorem\nfixes board_patterns :: nat\nassumes h0 : \"board_patterns = card {p :: (nat \\<Rightarrow> nat \\<Rightarrow> bool) . valid_Lshaped_placement p 3 6}\"\nshows  \"board_patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes board_patterns :: nat\nassumes h0 : \"board_patterns = card {p :: (nat \\<Rightarrow> nat \\<Rightarrow> bool) . valid_Lshaped_placement p 3 6}\"\nshows  \"board_patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many valid L-shaped placements are there on a 3x6 board? The final answer is 8."
    },
    "a_2": {
        "formal problem": "theorem\nfixes L_pieces :: nat and board_area :: nat\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"board_area = 3 * 6\"\nand h2 : \"L_pieces * 3 = board_area\"\nshows  \"number_of_patterns L_pieces board_area = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes L_pieces :: nat and board_area :: nat\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"board_area = 3 * 6\"\nand h2 : \"L_pieces * 3 = board_area\"\nshows  \"number_of_patterns L_pieces board_area = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There is a board with an area of 18 square units, which can be divided into 6 L-shaped pieces. Each L-shaped piece has an area of 3 square units. Find the number of different patterns that can be created using these 6 L-shaped pieces to completely fill the board. The final answer is 8."
    },
    "a_3": {
        "formal problem": "theorem\nfixes num_patterns :: nat\nassumes h0 : \"num_patterns = card {P :: (nat \\<times> nat) set. valid_pattern P}\"\nand h1 : \"valid_pattern P \\<longleftrightarrow> \n      (\\<forall>(x, y) \\<in> P. 0 \\<le> x \\<and> x < 6 \\<and> 0 \\<le> y \\<and> y < 3) \\<and>\n      (\\<forall>(x, y) \\<in> P. (\\<exists> L. L \\<subseteq> P \\<and> valid_L_piece L)) \\<and>\n      (\\<forall> L1 L2. L1 \\<noteq> L2 \\<and> L1 \\<subseteq> P \\<and> L2 \\<subseteq> P \\<and> valid_L_piece L1 \\<and> valid_L_piece L2 \\<longrightarrow> L1 \\<inter> L2 = {}) \\<and>\n      (\\<forall> L. L \\<subseteq> P \\<and> valid_L_piece L \\<longrightarrow> card L = 3) \\<and>\n      card P = 18\"\nand h2 : \"valid_L_piece L \\<longleftrightarrow> \n      (\\<exists> (x, y) \\<in> L. (\\<exists> a b. a \\<noteq> b \\<and> (x+a, y) \\<in> L \\<and> (x+b, y) \\<in> L) \\<and> (\\<exists> c. (x, y+c) \\<in> L))\"\nshows  \"num_patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes num_patterns :: nat\nassumes h0 : \"num_patterns = card {P :: (nat \\<times> nat) set. valid_pattern P}\"\nand h1 : \"valid_pattern P \\<longleftrightarrow> \n      (\\<forall>(x, y) \\<in> P. 0 \\<le> x \\<and> x < 6 \\<and> 0 \\<le> y \\<and> y < 3) \\<and>\n      (\\<forall>(x, y) \\<in> P. (\\<exists> L. L \\<subseteq> P \\<and> valid_L_piece L)) \\<and>\n      (\\<forall> L1 L2. L1 \\<noteq> L2 \\<and> L1 \\<subseteq> P \\<and> L2 \\<subseteq> P \\<and> valid_L_piece L1 \\<and> valid_L_piece L2 \\<longrightarrow> L1 \\<inter> L2 = {}) \\<and>\n      (\\<forall> L. L \\<subseteq> P \\<and> valid_L_piece L \\<longrightarrow> card L = 3) \\<and>\n      card P = 18\"\nand h2 : \"valid_L_piece L \\<longleftrightarrow> \n      (\\<exists> (x, y) \\<in> L. (\\<exists> a b. a \\<noteq> b \\<and> (x+a, y) \\<in> L \\<and> (x+b, y) \\<in> L) \\<and> (\\<exists> c. (x, y+c) \\<in> L))\"\nshows  \"num_patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many valid patterns can be formed on a 6x3 grid using non-overlapping L-shaped pieces, where each L-shaped piece consists of three adjacent cells (two horizontal cells and one vertical cell connected to one of the horizontal cells)? The final answer is 8."
    },
    "a_4": {
        "formal problem": "datatype L_shape = L_shape \"int \\<times> int\"\n\nfun covers_board :: \"L_shape list \\<Rightarrow> bool\"\nwhere\n\"covers_board [] = False\" |\n\"covers_board (_ # _) = True\"\n\ndefinition valid_board :: \"int \\<times> int\"\nwhere\n\"valid_board = (3, 6)\"\n\ntheorem\nfixes l_shapes :: \"L_shape list\"\nassumes h0 : \"length l_shapes = 6\"\nand h1 : \"covers_board l_shapes\"\nand h2 : \"valid_board\"\nshows  \"card (set l_shapes) = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ndatatype L_shape = L_shape \"int \\<times> int\"\n\nfun covers_board :: \"L_shape list \\<Rightarrow> bool\"\nwhere\n\"covers_board [] = False\" |\n\"covers_board (_ # _) = True\"\n\ndefinition valid_board :: \"int \\<times> int\"\nwhere\n\"valid_board = (3, 6)\"\n\ntheorem\nfixes l_shapes :: \"L_shape list\"\nassumes h0 : \"length l_shapes = 6\"\nand h1 : \"covers_board l_shapes\"\nand h2 : \"valid_board\"\nshows  \"card (set l_shapes) = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "You have an L-shaped tile with dimensions \"int x int\". There is a board of size 3x6. Determine if it is possible to cover the entire board using exactly 6 L-shaped tiles without any overlaps or gaps. If it is possible, find the number of distinct ways to arrange the tiles. The final answer is 8."
    },
    "a_5": {
        "formal problem": "theorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat list) list. valid_pattern p}\"\nand h1 : \"\\<forall> p. valid_pattern p \\<longleftrightarrow> (L_shaped_pieces p \\<and> cover_3_by_6_board p)\"\nand h2 : \"\\<forall> p. L_shaped_pieces p \\<longleftrightarrow> (length p = 6 \\<and> (\\<forall>piece. piece \\<in> set p \\<longrightarrow> L_shaped piece))\"\nand h3 : \"\\<forall> p. cover_3_by_6_board p \\<longleftrightarrow> (\\<forall>(x, y) \\<in> {(i, j). i \\<in> {1..3} \\<and> j \\<in> {1..6}}. occupied (x, y) p)\"\nshows  \"patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat list) list. valid_pattern p}\"\nand h1 : \"\\<forall> p. valid_pattern p \\<longleftrightarrow> (L_shaped_pieces p \\<and> cover_3_by_6_board p)\"\nand h2 : \"\\<forall> p. L_shaped_pieces p \\<longleftrightarrow> (length p = 6 \\<and> (\\<forall>piece. piece \\<in> set p \\<longrightarrow> L_shaped piece))\"\nand h3 : \"\\<forall> p. cover_3_by_6_board p \\<longleftrightarrow> (\\<forall>(x, y) \\<in> {(i, j). i \\<in> {1..3} \\<and> j \\<in> {1..6}}. occupied (x, y) p)\"\nshows  \"patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different patterns can be formed by placing 6 L-shaped pieces on a 3x6 board, such that each piece covers exactly 3 squares, and the entire board is covered? The final answer is 8."
    },
    "a_6": {
        "formal problem": "theorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {P :: (nat \\<Rightarrow> nat) set. valid_L_shape_cover P}\"\nand h1 : \"valid_L_shape_cover P \\<longleftrightarrow> (\\<forall> p \\<in> P. is_L_shape p) \\<and> six_L_shapes_cover_3x6_board P\"\nand h2 : \"is_L_shape p \\<longleftrightarrow> valid_L_shape_position p\"\nand h3 : \"six_L_shapes_cover_3x6_board P \\<longleftrightarrow> no_overlap P \\<and> complete_coverage P\"\nand h4 : \"no_overlap P \\<longleftrightarrow> (\\<forall> p1 p2 \\<in> P. p1 \\<noteq> p2 \\<longrightarrow> disjoint p1 p2)\"\nand h5 : \"complete_coverage P \\<longleftrightarrow> (\\<forall> (x, y) \\<in> 3x6_board. \\<exists> p \\<in> P. (x, y) \\<in> p)\"\nand h6 : \"3x6_board = { (x, y) | x y. x \\<in> {0..2} \\<and> y \\<in> {0..5} }\"\nshows  \"patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {P :: (nat \\<Rightarrow> nat) set. valid_L_shape_cover P}\"\nand h1 : \"valid_L_shape_cover P \\<longleftrightarrow> (\\<forall> p \\<in> P. is_L_shape p) \\<and> six_L_shapes_cover_3x6_board P\"\nand h2 : \"is_L_shape p \\<longleftrightarrow> valid_L_shape_position p\"\nand h3 : \"six_L_shapes_cover_3x6_board P \\<longleftrightarrow> no_overlap P \\<and> complete_coverage P\"\nand h4 : \"no_overlap P \\<longleftrightarrow> (\\<forall> p1 p2 \\<in> P. p1 \\<noteq> p2 \\<longrightarrow> disjoint p1 p2)\"\nand h5 : \"complete_coverage P \\<longleftrightarrow> (\\<forall> (x, y) \\<in> 3x6_board. \\<exists> p \\<in> P. (x, y) \\<in> p)\"\nand h6 : \"3x6_board = { (x, y) | x y. x \\<in> {0..2} \\<and> y \\<in> {0..5} }\"\nshows  \"patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different ways can you cover a 3x6 board with six L-shaped pieces without any overlaps or gaps? The final answer is 8."
    },
    "a_7": {
        "formal problem": "theorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat, nat) set. valid_placement p}\"\nand h1 : \"valid_placement p \\<longleftrightarrow> (|p| = 6 * L_shape) \\<and> fits_3_by_6_board p\"\nand h2 : \"L_shape = 3\"\nshows  \"patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat, nat) set. valid_placement p}\"\nand h1 : \"valid_placement p \\<longleftrightarrow> (|p| = 6 * L_shape) \\<and> fits_3_by_6_board p\"\nand h2 : \"L_shape = 3\"\nshows  \"patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different ways can a 3 by 6 board be completely filled with L-shaped pieces, each consisting of 3 tiles? The final answer is 8."
    },
    "a_8": {
        "formal problem": "theorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat \\<times> nat) set. valid_pattern p 6 3 6}\"\nand h1 : \"valid_pattern p L_shape_pieces board_width board_height \\<longleftrightarrow>\n                          (\\<forall>piece \\<in> p. L_shape_piece piece) \\<and>\n                          (\\<forall>(x, y) \\<in> board. \\<exists> piece \\<in> p. (x, y) \\<in> piece) \\<and>\n                          (\\<forall>piece1 \\<in> p. \\<forall>piece2 \\<in> p. piece1 \\<noteq> piece2 \\<longrightarrow> piece1 \\<inter> piece2 = {}) \\<and>\n                          card p = L_shape_pieces\"\nand h2 : \"L_shape_piece piece \\<longleftrightarrow>\n                          (\\<exists>x y. piece = {(x, y), (x+1, y), (x, y+1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x-1, y), (x, y+1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x+1, y), (x, y-1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x-1, y), (x, y-1)})\"\nshows  \"patterns = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes patterns :: nat\nassumes h0 : \"patterns = card {p :: (nat \\<times> nat) set. valid_pattern p 6 3 6}\"\nand h1 : \"valid_pattern p L_shape_pieces board_width board_height \\<longleftrightarrow>\n                          (\\<forall>piece \\<in> p. L_shape_piece piece) \\<and>\n                          (\\<forall>(x, y) \\<in> board. \\<exists> piece \\<in> p. (x, y) \\<in> piece) \\<and>\n                          (\\<forall>piece1 \\<in> p. \\<forall>piece2 \\<in> p. piece1 \\<noteq> piece2 \\<longrightarrow> piece1 \\<inter> piece2 = {}) \\<and>\n                          card p = L_shape_pieces\"\nand h2 : \"L_shape_piece piece \\<longleftrightarrow>\n                          (\\<exists>x y. piece = {(x, y), (x+1, y), (x, y+1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x-1, y), (x, y+1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x+1, y), (x, y-1)}) \\<or>\n                          (\\<exists>x y. piece = {(x, y), (x-1, y), (x, y-1)})\"\nshows  \"patterns = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many ways can you arrange 6 L-shaped pieces on a 3x6 board such that the entire board is covered and no pieces overlap? The final answer is 8."
    },
    "a_9": {
        "formal problem": "theorem\nfixes L_pieces :: nat and board :: \"nat * nat\"\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"board = (3, 6)\"\nshows  \"number_of_patterns L_pieces board = 8\"",
        "formal solution": "(* ### Problem\n In how many patterns can six identical L-shaped pieces, each consisting of three unit squares, be placed to perfectly cover a fixed 3 by 6 board? One such pattern is shown.\n\n[asy]\ndraw((0,0)--(6,0),linewidth(2));\ndraw((0,3)--(6,3),linewidth(2));\n\ndraw((0,0)--(0,3),linewidth(2));\ndraw((2,0)--(2,3),linewidth(2));\ndraw((4,0)--(4,3),linewidth(2));\ndraw((6,0)--(6,3),linewidth(2));\n\ndraw((0,1)--(1,1)--(1,2)--(3,2)--(3,1)--(5,1)--(5,2)--(6,2),linewidth(2));\n[/asy] The final Answer is 8\n ### Proof\n Consider the top left unit square. There are three different ways an L-shaped piece can cover that square: [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(1,1)--(1,2)--(2,2)--(2,3),linewidth(2));\n draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy] draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2));\n draw((0,2)--(1,2)--(1,1)--(2,1)--(2,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3)); draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] [asy]\n draw((0,0)--(6,0)--(6,3)--(0,3)--cycle,linewidth(2)); draw((0,1)--(2,1)--(2,2)--(1,2)--(1,3),linewidth(2)); draw((0,1)--(6,1)); draw((0,2)--(6,2)); draw((1,0)--(1,3)); draw((2,0)--(2,3)); draw((3,0)--(3,3));\n draw((4,0)--(4,3)); draw((5,0)--(5,3)); [/asy] For the first two cases, there is only one way to place another piece to cover the lower left corner. In the last case, there is no way to place another piece to cover the lower left corner without overlapping the first piece.\n In both of the first two cases, the two leftmost columns will be covered.\n So, we can use this logic again, on the top left square which has not yet been covered.\n We have two choices of how to cover the first two columns, two choices of how to cover the next two columns, and two choices of how to cover the last two columns, so there are $2\\cdot2\\cdot2=\\boxed{8}$ total ways to cover the entire board.\n *)\n\ntheorem\nfixes L_pieces :: nat and board :: \"nat * nat\"\nassumes h0 : \"L_pieces = 6\"\nand h1 : \"board = (3, 6)\"\nshows  \"number_of_patterns L_pieces board = 8\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many ways can you place 6 L-shaped pieces on a 3x6 rectangular board? The final answer is 8."
    },
    "level": "Level 4",
    "type": "Counting & Probability"
}