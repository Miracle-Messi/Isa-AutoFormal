{
    "natural problem": "How many possible distinct arrangements are there of the letters in the word DOG?",
    "natural solution": [
        "We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways."
    ],
    "natural answer": "6",
    "a_0": {
        "formal problem": "theorem permutations_of_dog:\nfixes perms :: \"string \\<Rightarrow> int\"\nassumes h0 : \"\\<forall> s. perms s = (fact (length s) div (product (map fact (map length (group (sort (list_of_string s)))))))\"\nshows  \"perms 'DOG' = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem permutations_of_dog:\nfixes perms :: \"string \\<Rightarrow> int\"\nassumes h0 : \"\\<forall> s. perms s = (fact (length s) div (product (map fact (map length (group (sort (list_of_string s)))))))\"\nshows  \"perms 'DOG' = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different ways can the letters in the word 'DOG' be arranged? The final answer is 6."
    },
    "a_1": {
        "formal problem": "theorem\nfixes word :: \"'a list\"\nassumes h0 : \"word = ['D', 'O', 'G']\"\nshows  \"fact (length word) = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes word :: \"'a list\"\nassumes h0 : \"word = ['D', 'O', 'G']\"\nshows  \"fact (length word) = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the factorial of the length of the word 'DOG'. The final answer is 6."
    },
    "a_2": {
        "formal problem": "theorem\nfixes perm :: \"char list \\<Rightarrow> char list set\"\nassumes h0 : \"perm ['D','O','G'] = {['D','O','G'], ['D','G','O'], ['O','D','G'], ['O','G','D'], ['G','D','O'], ['G','O','D']}\"\nshows  \"card (perm ['D','O','G']) = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes perm :: \"char list \\<Rightarrow> char list set\"\nassumes h0 : \"perm ['D','O','G'] = {['D','O','G'], ['D','G','O'], ['O','D','G'], ['O','G','D'], ['G','D','O'], ['G','O','D']}\"\nshows  \"card (perm ['D','O','G']) = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different permutations can be made from the letters in the word \"DOG\"? The final answer is 6."
    },
    "a_3": {
        "formal problem": "theorem\nfixes permutations :: \"('a list) \\<Rightarrow> ('a list) set\"\nassumes h0 : \"\\<forall> w. w = ['D', 'O', 'G'] \\<longrightarrow> permutations w = {v. length v = length w \\<and> distinct v \\<and> set v = set w}\"\nshows  \"card (permutations ['D', 'O', 'G']) = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes permutations :: \"('a list) \\<Rightarrow> ('a list) set\"\nassumes h0 : \"\\<forall> w. w = ['D', 'O', 'G'] \\<longrightarrow> permutations w = {v. length v = length w \\<and> distinct v \\<and> set v = set w}\"\nshows  \"card (permutations ['D', 'O', 'G']) = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different permutations can be formed from the letters in the word \"DOG\"? The final answer is 6."
    },
    "a_4": {
        "formal problem": "theorem\nfixes P :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> n. n \\<ge> 1 \\<longrightarrow> P n = n * P (n - 1)\"\nand h1 : \"P 0 = 1\"\nshows  \"P 3 = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes P :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> n. n \\<ge> 1 \\<longrightarrow> P n = n * P (n - 1)\"\nand h1 : \"P 0 = 1\"\nshows  \"P 3 = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A sequence P is defined such that for each natural number n greater than or equal to 1, the nth term is given by n times the (n-1)th term. If the 0th term of the sequence is 1, what is the value of the 3rd term in the sequence? The final answer is 6."
    },
    "a_5": {
        "formal problem": "theorem\nfixes f :: \"string \\<Rightarrow> nat\"\nassumes h0 : \"f 'DOG' = fact (length 'DOG')\"\nshows  \"f 'DOG' = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes f :: \"string \\<Rightarrow> nat\"\nassumes h0 : \"f 'DOG' = fact (length 'DOG')\"\nshows  \"f 'DOG' = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "\"If a function f assigns to each string the factorial of its length, what is the value of f('DOG')? The final answer is 6.\""
    },
    "a_6": {
        "formal problem": "theorem\nfixes DOG :: \"(char list)\"\nassumes h0 : \"DOG = ['D', 'O', 'G']\"\nshows  \"fact (length DOG) = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes DOG :: \"(char list)\"\nassumes h0 : \"DOG = ['D', 'O', 'G']\"\nshows  \"fact (length DOG) = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many ways can you arrange the letters in the word 'DOG'? The final answer is 6."
    },
    "a_7": {
        "formal problem": "theorem\nfixes arrangements :: \"char list \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall>word. arrangements word = fact (length (remdups word))\"\nshows  \"arrangements ['D', 'O', 'G'] = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes arrangements :: \"char list \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall>word. arrangements word = fact (length (remdups word))\"\nshows  \"arrangements ['D', 'O', 'G'] = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many different arrangements can be made from the letters of the word \"DOG\"? The final answer is 6."
    },
    "a_8": {
        "formal problem": "theorem\nfixes P :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> n. P n = n!\"\nshows  \"P 3 = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes P :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> n. P n = n!\"\nshows  \"P 3 = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "\"What is the factorial of 3? The final answer is 6.\""
    },
    "a_9": {
        "formal problem": "theorem\nfixes a :: real\nassumes h0 : \"a = fact 3\"\nshows  \"a = 6\"",
        "formal solution": "(* ### Problem\n How many possible distinct arrangements are there of the letters in the word DOG? The final Answer is 6\n ### Proof\n We could list them: DOG, DGO, ODG, OGD, GDO, GOD. Or we could have noticed that we have 3 ways to pick the first letter, 2 ways left to pick the second, and 1 way to pick the third, for a total of $3\\cdot2\\cdot 1 = \\boxed{6}$ ways.\n *)\n\ntheorem\nfixes a :: real\nassumes h0 : \"a = fact 3\"\nshows  \"a = 6\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "The factorial of 3 is equal to what real number? The answer is 6."
    },
    "level": "Level 1",
    "type": "Prealgebra"
}