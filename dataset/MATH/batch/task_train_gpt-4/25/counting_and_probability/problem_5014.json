{
    "natural problem": "In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n",
    "natural solution": [
        "Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.",
        "So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.",
        "Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$."
    ],
    "natural answer": "704",
    "a_0": {
        "formal problem": "theorem\nfixes office_days :: nat\nand order :: \"nat list\"\nand valid_orders :: \"nat list set\"\nand remaining_orders :: nat\nassumes h0 : \"office_days = 9\"\nand h1 : \"order = [1, 2, 3, 4, 5, 6, 7, 8, 9]\"\nand h2 : \"8 \\<in> set order\"\nand h3 : \"valid_orders = {valid_order. \\<forall>valid_order. valid_order \\<noteq> [] \\<and> valid_order \\<subseteq> set order \\<and> valid_order \\<noteq> [8]}\"\nand h4 : \"remaining_orders = card valid_orders\"\nshows  \"remaining_orders = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes office_days :: nat\nand order :: \"nat list\"\nand valid_orders :: \"nat list set\"\nand remaining_orders :: nat\nassumes h0 : \"office_days = 9\"\nand h1 : \"order = [1, 2, 3, 4, 5, 6, 7, 8, 9]\"\nand h2 : \"8 \\<in> set order\"\nand h3 : \"valid_orders = {valid_order. \\<forall>valid_order. valid_order \\<noteq> [] \\<and> valid_order \\<subseteq> set order \\<and> valid_order \\<noteq> [8]}\"\nand h4 : \"remaining_orders = card valid_orders\"\nshows  \"remaining_orders = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In an office, there are 9 workdays numbered 1 to 9. However, day 8 is a holiday and cannot be included in any valid work order. How many different non-empty combinations of workdays can be made excluding day 8? The final answer is 704."
    },
    "a_1": {
        "formal problem": "theorem\nfixes S :: \"nat list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 8, 9}\"\nand h1 : \"sorted S\"\nand h2 : \"\\<forall>x \\<in> set S. x \\<le> 9\"\nand h3 : \"8 \\<notin> set S\"\nand h4 : \"\\<exists> T. set T = set S \\<and> sorted T\"\nshows  \"card {T. set T = set S \\<and> sorted T} = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes S :: \"nat list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 8, 9}\"\nand h1 : \"sorted S\"\nand h2 : \"\\<forall>x \\<in> set S. x \\<le> 9\"\nand h3 : \"8 \\<notin> set S\"\nand h4 : \"\\<exists> T. set T = set S \\<and> sorted T\"\nshows  \"card {T. set T = set S \\<and> sorted T} = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given a set $S$ of distinct numbers $\\{1, 2, 3, 4, 5, 6, 7, 8, 9\\}$, but with the number $8$ missing, how many different sorted lists $T$ can be formed using the elements of $S$? The final answer is 704."
    },
    "a_2": {
        "formal problem": "theorem\nfixes order :: \"nat list\"\nassumes h0 : \"8 \\<in> set order\"\nand h1 : \"\\<forall>i \\<in> {1..9}. i \\<noteq> 8 \\<longrightarrow> i \\<in> set order \\<or> (\\<exists>j. i = order ! j)\"\nand h2 : \"distinct order\"\nand h3 : \"order = takeWhile (\\<lambda>x. x \\<noteq> 8) order @ dropWhile (\\<lambda>x. x \\<noteq> 8) order\"\nshows  \"card {order'. order' \\<noteq> order \\<and> distinct order' \\<and> (\\<forall>i \\<in> {1..9}. i \\<noteq> 8 \\<longrightarrow> i \\<in> set order' \\<or> (\\<exists>j. i = order' ! j))} = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes order :: \"nat list\"\nassumes h0 : \"8 \\<in> set order\"\nand h1 : \"\\<forall>i \\<in> {1..9}. i \\<noteq> 8 \\<longrightarrow> i \\<in> set order \\<or> (\\<exists>j. i = order ! j)\"\nand h2 : \"distinct order\"\nand h3 : \"order = takeWhile (\\<lambda>x. x \\<noteq> 8) order @ dropWhile (\\<lambda>x. x \\<noteq> 8) order\"\nshows  \"card {order'. order' \\<noteq> order \\<and> distinct order' \\<and> (\\<forall>i \\<in> {1..9}. i \\<noteq> 8 \\<longrightarrow> i \\<in> set order' \\<or> (\\<exists>j. i = order' ! j))} = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There is an ordered list of distinct natural numbers from 1 to 9, excluding 8, where 8 is also in the list but its position is not specified. How many different orderings of the list can be created that satisfy these conditions? The final answer is 704."
    },
    "a_3": {
        "formal problem": "datatype letter = L1 | L2 | L3 | L4 | L5 | L6 | L7 | L8 | L9\n\nfun valid_order :: \"letter list \\<Rightarrow> bool\" where\n  \"valid_order [] = True\" |\n  \"valid_order (x # xs) = (if x = L8 then False else valid_order xs)\"\n\nfun count_orders :: \"letter list \\<Rightarrow> int\" where\n  \"count_orders [] = 0\" |\n  \"count_orders (x # xs) = (if valid_order (x # xs) then 1 + count_orders xs else count_orders xs)\"\n\ntheorem\nfixes letters :: \"letter list\"\nassumes h0 : \"set letters = {L1, L2, L3, L4, L5, L6, L7, L9}\"\nand h1 : \"distinct letters\"\nshows  \"count_orders (remdups (perms letters)) = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ndatatype letter = L1 | L2 | L3 | L4 | L5 | L6 | L7 | L8 | L9\n\nfun valid_order :: \"letter list \\<Rightarrow> bool\" where\n  \"valid_order [] = True\" |\n  \"valid_order (x # xs) = (if x = L8 then False else valid_order xs)\"\n\nfun count_orders :: \"letter list \\<Rightarrow> int\" where\n  \"count_orders [] = 0\" |\n  \"count_orders (x # xs) = (if valid_order (x # xs) then 1 + count_orders xs else count_orders xs)\"\n\ntheorem\nfixes letters :: \"letter list\"\nassumes h0 : \"set letters = {L1, L2, L3, L4, L5, L6, L7, L9}\"\nand h1 : \"distinct letters\"\nshows  \"count_orders (remdups (perms letters)) = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There are 9 letters: L1, L2, L3, L4, L5, L6, L7, L8, and L9. A valid order of these letters is one where L8 does not appear. How many valid orders can be formed using the distinct letters L1, L2, L3, L4, L5, L6, L7, and L9? The final answer is 704."
    },
    "a_4": {
        "formal problem": "theorem\nfixes possible_orders :: nat and S :: \"nat list\"\nassumes h0 : \"8 \\<in> set S\"\nand h1 : \"\\<forall> i. i \\<in> set S \\<longrightarrow> i \\<ge> 1 \\<and> i \\<le> 9\"\nand h2 : \"distinct S\"\nand h3 : \"sorted S\"\nand h4 : \"\\<forall> i j. i < j \\<longrightarrow> i \\<in> set S \\<longrightarrow> j \\<in> set S \\<longrightarrow> (i, j) \\<in> {(1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (7, 8), (8, 9)}\"\nshows  \"possible_orders = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes possible_orders :: nat and S :: \"nat list\"\nassumes h0 : \"8 \\<in> set S\"\nand h1 : \"\\<forall> i. i \\<in> set S \\<longrightarrow> i \\<ge> 1 \\<and> i \\<le> 9\"\nand h2 : \"distinct S\"\nand h3 : \"sorted S\"\nand h4 : \"\\<forall> i j. i < j \\<longrightarrow> i \\<in> set S \\<longrightarrow> j \\<in> set S \\<longrightarrow> (i, j) \\<in> {(1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (7, 8), (8, 9)}\"\nshows  \"possible_orders = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "You have a sorted list of distinct integers S, such that every integer i in the list S is between 1 and 9, inclusive. The integer 8 is in the list S. For every pair of integers i and j in the list S, where i < j, the pair (i, j) must be one of the following: (1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (7, 8), (8, 9). Find the total number of possible orders of the list S. The final answer is 704."
    },
    "a_5": {
        "formal problem": "theorem\nfixes typing_orders :: \"nat set\"\nassumes h0 : \"finite typing_orders\"\nand h1 : \"card typing_orders = 9\"\nand h2 : \"8 \\<in> typing_orders\"\nand h3 : \"\\<forall> seq. seq \\<in> typing_orders - {8} \\<longrightarrow> valid_order seq\"\nshows  \"card {seq. seq \\<in> typing_orders - {8} \\<and> valid_order seq} = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes typing_orders :: \"nat set\"\nassumes h0 : \"finite typing_orders\"\nand h1 : \"card typing_orders = 9\"\nand h2 : \"8 \\<in> typing_orders\"\nand h3 : \"\\<forall> seq. seq \\<in> typing_orders - {8} \\<longrightarrow> valid_order seq\"\nshows  \"card {seq. seq \\<in> typing_orders - {8} \\<and> valid_order seq} = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a set of typing orders, there are 9 distinct orders, and one of them is 8. The other 8 orders are considered valid. Find the total number of valid orders without including the order 8. The final answer is 704."
    },
    "a_6": {
        "formal problem": "datatype operation = Append int | Remove\n\nfun valid_sequence :: \"operation list \\<Rightarrow> bool\"\nwhere\n  \"valid_sequence [] = True\"\n| \"valid_sequence (Remove # ops) = False\"\n| \"valid_sequence (Append n # ops) = (valid_sequence ops \\<and> n \\<notin> set (map (\\<lambda> x. case x of Append m \\<Rightarrow> m | _ \\<Rightarrow> 0) ops))\"\n\nfun final_state :: \"operation list \\<Rightarrow> int list\"\nwhere\n  \"final_state [] = []\"\n| \"final_state (Remove # ops) = (case final_state ops of [] \\<Rightarrow> [] | xs \\<Rightarrow> tl xs)\"\n| \"final_state (Append n # ops) = (n # final_state ops)\"\n\ntheorem\nfixes S :: \"int list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 9}\"\nand h1 : \"valid_sequence (map Append S @ Remove # ops)\"\nand h2 : \"final_state (map Append S @ Remove # ops) = []\"\nshows  \"card {ops. length ops = 9 \\<and> valid_sequence (map Append S @ Remove # ops) \\<and> final_state (map Append S @ Remove # ops) = []} = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ndatatype operation = Append int | Remove\n\nfun valid_sequence :: \"operation list \\<Rightarrow> bool\"\nwhere\n  \"valid_sequence [] = True\"\n| \"valid_sequence (Remove # ops) = False\"\n| \"valid_sequence (Append n # ops) = (valid_sequence ops \\<and> n \\<notin> set (map (\\<lambda> x. case x of Append m \\<Rightarrow> m | _ \\<Rightarrow> 0) ops))\"\n\nfun final_state :: \"operation list \\<Rightarrow> int list\"\nwhere\n  \"final_state [] = []\"\n| \"final_state (Remove # ops) = (case final_state ops of [] \\<Rightarrow> [] | xs \\<Rightarrow> tl xs)\"\n| \"final_state (Append n # ops) = (n # final_state ops)\"\n\ntheorem\nfixes S :: \"int list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 9}\"\nand h1 : \"valid_sequence (map Append S @ Remove # ops)\"\nand h2 : \"final_state (map Append S @ Remove # ops) = []\"\nshows  \"card {ops. length ops = 9 \\<and> valid_sequence (map Append S @ Remove # ops) \\<and> final_state (map Append S @ Remove # ops) = []} = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a sequence of operations, where each operation can be either appending an integer to a list or removing the last element from the list. An operation sequence is valid if and only if:\n\n1. It does not start with a removal operation.\n2. When appending an integer, the integer is not already in the list.\n\nLet the initial state be a list of integers {1, 2, 3, 4, 5, 6, 7, 9}. Find the number of valid operation sequences of length 9 that result in an empty list after performing all operations. The final answer is 704."
    },
    "a_7": {
        "formal problem": "theorem\nfixes S :: \"nat list\"\nand boss_order :: \"nat list\"\nand type_order :: \"nat list\"\nand after_lunch_orders :: \"nat list list\"\nassumes h0 : \"boss_order = [1, 2, 3, 4, 5, 6, 7, 8, 9]\"\nand h1 : \"8 \\<in> set type_order\"\nand h2 : \"distinct type_order\"\nand h3 : \"set type_order \\<subseteq> set boss_order\"\nand h4 : \"\\<forall>order. order \\<in> set after_lunch_orders \\<longleftrightarrow> (distinct order \\<and> set order \\<subseteq> set S \\<and> type_order @ order \\<in> valid_orders)\"\nand h5 : \"valid_orders = {orders. distinct orders \\<and> set orders \\<subseteq> set boss_order \\<and> (\\<forall>i j. i < j \\<and> orders ! i < orders ! j)}\"\nshows  \"card (set after_lunch_orders) = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes S :: \"nat list\"\nand boss_order :: \"nat list\"\nand type_order :: \"nat list\"\nand after_lunch_orders :: \"nat list list\"\nassumes h0 : \"boss_order = [1, 2, 3, 4, 5, 6, 7, 8, 9]\"\nand h1 : \"8 \\<in> set type_order\"\nand h2 : \"distinct type_order\"\nand h3 : \"set type_order \\<subseteq> set boss_order\"\nand h4 : \"\\<forall>order. order \\<in> set after_lunch_orders \\<longleftrightarrow> (distinct order \\<and> set order \\<subseteq> set S \\<and> type_order @ order \\<in> valid_orders)\"\nand h5 : \"valid_orders = {orders. distinct orders \\<and> set orders \\<subseteq> set boss_order \\<and> (\\<forall>i j. i < j \\<and> orders ! i < orders ! j)}\"\nshows  \"card (set after_lunch_orders) = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A boss has 9 tasks numbered 1 to 9. The boss decides to complete tasks in a specific order. The first part of the order, called \"type_order,\" must contain task 8 and be a distinct subsequence of the boss' order. The second part of the order, called \"after_lunch_orders,\" consists of several distinct subsequences of the remaining tasks, and each subsequence combined with \"type_order\" must form a valid order. A valid order is a distinct sequence of tasks where the tasks are completed in increasing order. How many different subsequences are there for \"after_lunch_orders\"? The final answer is 704."
    },
    "a_8": {
        "formal problem": "theorem\nfixes S :: \"nat list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 8, 9}\"\nand h1 : \"8 \\<in> set S\"\nand h2 : \"sorted S\"\nand h3 : \"distinct S\"\nand h4 : \"\\<forall> x \\<in> set S. x \\<noteq> 8 \\<longrightarrow> (\\<exists> T. set T = set S - {x} \\<and> sorted T \\<and> distinct T)\"\nshows  \"card {T. set T \\<subseteq> set S \\<and> sorted T \\<and> distinct T \\<and> (\\<forall> x \\<in> set T. x \\<noteq> 8)} = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ntheorem\nfixes S :: \"nat list\"\nassumes h0 : \"set S = {1, 2, 3, 4, 5, 6, 7, 8, 9}\"\nand h1 : \"8 \\<in> set S\"\nand h2 : \"sorted S\"\nand h3 : \"distinct S\"\nand h4 : \"\\<forall> x \\<in> set S. x \\<noteq> 8 \\<longrightarrow> (\\<exists> T. set T = set S - {x} \\<and> sorted T \\<and> distinct T)\"\nshows  \"card {T. set T \\<subseteq> set S \\<and> sorted T \\<and> distinct T \\<and> (\\<forall> x \\<in> set T. x \\<noteq> 8)} = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider the set of integers $S=\\{1, 2, 3, 4, 5, 6, 7, 8, 9\\}$. How many distinct subsets $T$ of $S$ can be formed such that $T$ is sorted, does not contain the number 8, and removing any other element from $T$ still results in a sorted set with distinct elements? The final answer is 704."
    },
    "a_9": {
        "formal problem": "datatype 'a stack = Empty | Push \"'a\" \"'a stack\"\n\nfun append :: \"'a stack \\<Rightarrow> 'a \\<Rightarrow> 'a stack\" where\n\"append Empty x = Push x Empty\" |\n\"append (Push y ys) x = Push y (append ys x)\"\n\nfun pop_last :: \"'a stack \\<Rightarrow> 'a stack\" where\n\"pop_last Empty = Empty\" |\n\"pop_last (Push x Empty) = Empty\" |\n\"pop_last (Push x (Push y ys)) = Push x (pop_last (Push y ys))\"\n\nfun count_orders :: \"nat stack \\<Rightarrow> nat \\<Rightarrow> nat\" where\n\"count_orders s 9 = (if s = Push 8 Empty then 1 else 0)\" |\n\"count_orders s n = count_orders (append s n) (n+1) + count_orders (pop_last s) (n+1)\"\n\ntheorem\nshows  \"count_orders Empty 1 = 704\"",
        "formal solution": "(* ### Problem\n In an office at various times during the day, the boss gives the secretary a letter to type, each time putting the letter on top of the pile in the secretary's in-box. When there is time, the secretary takes the top letter off the pile and types it. There are nine letters to be typed during the day, and the boss delivers them in the order $1, 2, 3, 4, 5, 6, 7, 8, 9$.\nWhile leaving for lunch, the secretary tells a colleague that letter $8$ has already been typed, but says nothing else about the morning's typing. The colleague wonders which of the nine letters remain to be typed after lunch and in what order they will be typed. Based upon the above information, how many such after-lunch typing orders are possible? (That there are no letters left to be typed is one of the possibilities.)\nRe-stating the problem for clarity, let $S$ be a set arranged in increasing order. At any time an element can be appended to the end of $S$, or the last element of $S$ can be removed. The question asks for the number of different orders in which the all of the remaining elements of $S$ can be removed, given that $8$ had been removed already.\n The final Answer is 704\n ### Proof\n Since $8$ had already been added to the pile, the numbers $1 \\ldots 7$ had already been added at some time to the pile; $9$ might or might not have been added yet.\n So currently $S$ is a subset of $\\{1, 2, \\ldots 7\\}$, possibly with $9$ at the end. Given that $S$ has $k$ elements, there are $k+1$ intervals for $9$ to be inserted, or $9$ might have already been placed, giving $k+2$ different possibilities.\n Thus, the answer is $\\sum_{k=0}^{7} {7 \\choose k}(k+2)$ $= 1 \\cdot 2 + 7 \\cdot 3 + 21 \\cdot 4 + 35 \\cdot 5 + 35 \\cdot 6 + 21 \\cdot 7 + 7 \\cdot 8 + 1 \\cdot 9$ $= \\boxed{704}$.\n *)\n\ndatatype 'a stack = Empty | Push \"'a\" \"'a stack\"\n\nfun append :: \"'a stack \\<Rightarrow> 'a \\<Rightarrow> 'a stack\" where\n\"append Empty x = Push x Empty\" |\n\"append (Push y ys) x = Push y (append ys x)\"\n\nfun pop_last :: \"'a stack \\<Rightarrow> 'a stack\" where\n\"pop_last Empty = Empty\" |\n\"pop_last (Push x Empty) = Empty\" |\n\"pop_last (Push x (Push y ys)) = Push x (pop_last (Push y ys))\"\n\nfun count_orders :: \"nat stack \\<Rightarrow> nat \\<Rightarrow> nat\" where\n\"count_orders s 9 = (if s = Push 8 Empty then 1 else 0)\" |\n\"count_orders s n = count_orders (append s n) (n+1) + count_orders (pop_last s) (n+1)\"\n\ntheorem\nshows  \"count_orders Empty 1 = 704\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a stack data structure with elements of type 'a, where it can be either empty or contain an element followed by another stack. We define an append function that appends an element to a given stack and a pop_last function that removes the last element from a given stack.\n\nNow, we want to count the number of possible sequences of pushing and popping elements to the stack, such that the elements are numbers from 1 to 9, and the final stack contains only the element 8.\n\nFind the total number of such sequences. The final answer is 704."
    },
    "level": "Level 5",
    "type": "Counting & Probability"
}