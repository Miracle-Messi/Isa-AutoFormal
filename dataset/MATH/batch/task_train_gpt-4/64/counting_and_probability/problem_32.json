{
    "natural problem": "A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes?",
    "natural solution": [
        "Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes."
    ],
    "natural answer": "90",
    "a_0": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = reverse_int n)\"\nand h1 : \"count_palindromes (1000::int) (9999::int) = (\\<Sum>n | 1000 \\<le> n \\<and> n \\<le> 9999 \\<and> is_palindrome n. 1)\"\nshows  \"count_palindromes 1000 9999 = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = reverse_int n)\"\nand h1 : \"count_palindromes (1000::int) (9999::int) = (\\<Sum>n | 1000 \\<le> n \\<and> n \\<le> 9999 \\<and> is_palindrome n. 1)\"\nshows  \"count_palindromes 1000 9999 = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromic integers are there between 1000 and 9999? The final answer is 90."
    },
    "a_1": {
        "formal problem": "theorem\nfixes palindrome_count :: nat\nassumes h0 : \"palindrome_count = card {n. 1000 \\<le> n \\<and> n \\<le> 9999 \\<and> (\\<exists> a b c d. n = 1000 * a + 100 * b + 10 * c + d \\<and> a = d \\<and> b = c)}\"\nshows  \"palindrome_count = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes palindrome_count :: nat\nassumes h0 : \"palindrome_count = card {n. 1000 \\<le> n \\<and> n \\<le> 9999 \\<and> (\\<exists> a b c d. n = 1000 * a + 100 * b + 10 * c + d \\<and> a = d \\<and> b = c)}\"\nshows  \"palindrome_count = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many 4-digit palindromic numbers are there? The final answer is 90."
    },
    "a_2": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = reverse_number n)\"\nand h1 : \"count_palindromes = (\\<Sum> n | is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999. 1)\"\nshows  \"count_palindromes = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = reverse_number n)\"\nand h1 : \"count_palindromes = (\\<Sum> n | is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999. 1)\"\nshows  \"count_palindromes = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many 4-digit palindromic numbers are there? The final answer is 90."
    },
    "a_3": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n \\<longleftrightarrow> (\\<exists> a b. 0 \\<le> a \\<and> a < 10 \\<and> 0 \\<le> b \\<and> b < 10 \\<and> n = 1000 * a + 100 * b + 10 * b + a)\"\nshows  \"card {n. is_palindrome n \\<and> 1000 \\<le> n \\<and> n < 10000} = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n \\<longleftrightarrow> (\\<exists> a b. 0 \\<le> a \\<and> a < 10 \\<and> 0 \\<le> b \\<and> b < 10 \\<and> n = 1000 * a + 100 * b + 10 * b + a)\"\nshows  \"card {n. is_palindrome n \\<and> 1000 \\<le> n \\<and> n < 10000} = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A four-digit integer is a palindrome if it can be written in the form $1000a + 100b + 10b + a$, where $a$ and $b$ are digits between 0 and 9. How many four-digit palindromes are there? The final answer is 90."
    },
    "a_4": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (n > 999 \\<and> n < 10000 \\<and> (\\<exists>a b. n = a * 1000 + b * 100 + b * 10 + a))\"\nshows  \"card {n. is_palindrome n} = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (n > 999 \\<and> n < 10000 \\<and> (\\<exists>a b. n = a * 1000 + b * 100 + b * 10 + a))\"\nshows  \"card {n. is_palindrome n} = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many 4-digit palindromes are there? The final answer is 90."
    },
    "a_5": {
        "formal problem": "theorem\nfixes palindrome :: \"nat \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. palindrome n \\<longleftrightarrow> (\\<exists>a b. n = a * 1000 + b * 100 + b * 10 + a)\"\nshows  \"card {n. palindrome n \\<and> n \\<ge> 1000 \\<and> n < 10000} = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes palindrome :: \"nat \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. palindrome n \\<longleftrightarrow> (\\<exists>a b. n = a * 1000 + b * 100 + b * 10 + a)\"\nshows  \"card {n. palindrome n \\<and> n \\<ge> 1000 \\<and> n < 10000} = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many four-digit palindromes are there? A palindrome is a number that reads the same forwards and backwards, and can be written as $n = 1000a + 100b + 10b + a$. The final answer is 90."
    },
    "a_6": {
        "formal problem": "theorem count_palindromes:\nfixes palindrome_count :: nat\nassumes h0 : \"\\<forall>n::nat. n \\<ge> 1000 \\<and> n \\<le> 9999 \\<and> is_palindrome n \\<longleftrightarrow> palindrome_count = palindrome_count + 1\"\nshows  \"palindrome_count = 90\"\n\nwhere \"is_palindrome n = (n = reverse_number n)\"\n\nand \"reverse_number n = (if n < 10 then n else (n mod 10) * (10 ^ (num_digits n - 1)) + reverse_number (n div 10))\"\n\nand \"num_digits n = (if n < 10 then 1 else 1 + num_digits (n div 10))\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem count_palindromes:\nfixes palindrome_count :: nat\nassumes h0 : \"\\<forall>n::nat. n \\<ge> 1000 \\<and> n \\<le> 9999 \\<and> is_palindrome n \\<longleftrightarrow> palindrome_count = palindrome_count + 1\"\nshows  \"palindrome_count = 90\"\n\nwhere \"is_palindrome n = (n = reverse_number n)\"\n\nand \"reverse_number n = (if n < 10 then n else (n mod 10) * (10 ^ (num_digits n - 1)) + reverse_number (n div 10))\"\n\nand \"num_digits n = (if n < 10 then 1 else 1 + num_digits (n div 10))\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many 4-digit palindromic numbers are there? A number is considered palindromic if it reads the same forward and backward. The final answer is 90."
    },
    "a_7": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = (rev (int_to_list n)))\"\nand h1 : \"{n. is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999} = palindromes\"\nshows  \"card palindromes = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = (rev (int_to_list n)))\"\nand h1 : \"{n. is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999} = palindromes\"\nshows  \"card palindromes = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the total number of four-digit palindromic integers. The final answer is 90."
    },
    "a_8": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = reverse_integer n)\"\nand h1 : \"count_palindromes = card {n. is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999}\"\nshows  \"count_palindromes = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = reverse_integer n)\"\nand h1 : \"count_palindromes = card {n. is_palindrome n \\<and> n \\<ge> 1000 \\<and> n \\<le> 9999}\"\nshows  \"count_palindromes = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Determine the number of palindrome integers between 1000 and 9999 inclusive. The final answer is 90."
    },
    "a_9": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"\\<forall>n. is_palindrome n \\<longrightarrow> n \\<ge> 1000 \\<and> n \\<le> 9999\"\nshows  \"card {n. is_palindrome n} = 90\"",
        "formal solution": "(* ### Problem\n A palindrome is a number that reads the same forwards and backwards, such as 3003. How many positive four-digit integers are palindromes? The final Answer is 90\n ### Proof\n Constructing palindromes requires that we choose the thousands digit (which defines the units digit) and the hundreds digit (which defines the tens digit). Since there are 9 choices for the thousands digit, and 10 choices for the hundreds digit, creating $9 \\cdot 10 = \\boxed{90}$ palindromes.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"\\<forall>n. is_palindrome n \\<longrightarrow> n \\<ge> 1000 \\<and> n \\<le> 9999\"\nshows  \"card {n. is_palindrome n} = 90\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many 4-digit numbers are palindromes? The final answer is 90."
    },
    "level": "Level 2",
    "type": "Counting & Probability"
}