{
    "natural problem": "Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$.",
    "natural solution": [
        "As usual, we start by graphing these lines. An easy way to go about it is to plot some points.",
        "Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.",
        "path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); ",
        "    return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);",
        "rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]",
        "Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) ",
        "{     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); ",
        "pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);",
        "draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]",
        "Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) ",
        "{     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);",
        "pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);",
        "draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); ",
        "label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.",
        "This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.",
        "Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.",
        "path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); ",
        "    return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);",
        "//End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); ",
        "draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); ",
        "dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction",
        "\\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) ",
        "{     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);",
        "pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; ",
        "rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); ",
        "draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); ",
        "dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that",
        "\\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that",
        "\\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.",
        "We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.",
        "Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$"
    ],
    "natural answer": "\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}",
    "a_0": {
        "formal problem": "theorem\nfixes l m A B P v :: \"real \\<Rightarrow> real\"\nassumes h0 : \"l = \\<lambda>t. (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"m = \\<lambda>s. (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A = l t\"\nand h3 : \"B = m s\"\nand h4 : \"P = foot_perpendicular A m\"\nand h5 : \"v = projection (B - A) v\"\nand h6 : \"v1 + v2 = 2\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes l m A B P v :: \"real \\<Rightarrow> real\"\nassumes h0 : \"l = \\<lambda>t. (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"m = \\<lambda>s. (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A = l t\"\nand h3 : \"B = m s\"\nand h4 : \"P = foot_perpendicular A m\"\nand h5 : \"v = projection (B - A) v\"\nand h6 : \"v1 + v2 = 2\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two parametric lines $l(t) = (1 + 4t, 4 + 3t)$ and $m(s) = (-5 + 4s, 6 + 3s)$, let $A = l(t)$ and $B = m(s)$. Let $P$ be the foot of the perpendicular from $A$ to $m$, and $v$ be the projection of the vector $B - A$ onto $v$. If $v1 + v2 = 2$, find the value of $v$. The final answer is $(-6, 8)$."
    },
    "a_1": {
        "formal problem": "theorem\nfixes v :: \"real \\<times> real\"\nand l :: \"real \\<Rightarrow> real \\<times> real\"\nand m :: \"real \\<Rightarrow> real \\<times> real\"\nassumes h0 : \"\\<forall>t. l t = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall>s. m s = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"fst v + snd v = 2\"\nand h3 : \"let A = l t; B = m s; P = foot A B m in vector A P = proj (vector B A) v\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes v :: \"real \\<times> real\"\nand l :: \"real \\<Rightarrow> real \\<times> real\"\nand m :: \"real \\<Rightarrow> real \\<times> real\"\nassumes h0 : \"\\<forall>t. l t = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall>s. m s = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"fst v + snd v = 2\"\nand h3 : \"let A = l t; B = m s; P = foot A B m in vector A P = proj (vector B A) v\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two parametric lines l and m in the plane, defined by l(t) = (1 + 4t, 4 + 3t) and m(s) = (-5 + 4s, 6 + 3s) respectively. Assume there is a vector v such that the sum of its components equals 2. If the vector from a point A on l to the foot P of the perpendicular from A to m equals the projection of the vector from B on m to A onto v, find the vector v. The final answer is (-6,8)."
    },
    "a_2": {
        "formal problem": "theorem\nfixes l m P A B :: \"real^2\" and v :: \"real^2\"\nassumes h0 : \"l = (\\<lambda>t. vector [1 + 4*t, 4 + 3*t])\"\nand h1 : \"m = (\\<lambda>s. vector [-5 + 4*s, 6 + 3*s])\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P = B + (proj (A - B) v)\"\nand h5 : \"v$1 + v$2 = 2\"\nshows  \"v = vector [-6,8]\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes l m P A B :: \"real^2\" and v :: \"real^2\"\nassumes h0 : \"l = (\\<lambda>t. vector [1 + 4*t, 4 + 3*t])\"\nand h1 : \"m = (\\<lambda>s. vector [-5 + 4*s, 6 + 3*s])\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P = B + (proj (A - B) v)\"\nand h5 : \"v$1 + v$2 = 2\"\nshows  \"v = vector [-6,8]\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two parametric line equations $l(t) = [1 + 4t, 4 + 3t]$ and $m(s) = [-5 + 4s, 6 + 3s]$. Assume points $A$ lies on line $l$ and $B$ lies on line $m$. Point $P$ is derived from $B$ by projecting the vector from $B$ to $A$ onto vector $v$. Given that the sum of the components of vector $v$ is 2, find the vector $v$. The solution is $v = [-6,8]$."
    },
    "a_3": {
        "formal problem": "theorem\nfixes A B P v :: \"real*real\"\nassumes h0 : \"A = (1 + 4 * t, 4 + 3 * t) for some t::real\"\nand h1 : \"B = (-5 + 4 * s, 6 + 3 * s) for some s::real\"\nand h2 : \"P is the foot of the perpendicular from A to the line defined by B\"\nand h3 : \"PA is the projection of BA onto v\"\nand h4 : \"fst v + snd v = 2\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes A B P v :: \"real*real\"\nassumes h0 : \"A = (1 + 4 * t, 4 + 3 * t) for some t::real\"\nand h1 : \"B = (-5 + 4 * s, 6 + 3 * s) for some s::real\"\nand h2 : \"P is the foot of the perpendicular from A to the line defined by B\"\nand h3 : \"PA is the projection of BA onto v\"\nand h4 : \"fst v + snd v = 2\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Let A and B be two points in the plane, where A = (1 + 4t, 4 + 3t) for some real number t and B = (-5 + 4s, 6 + 3s) for some real number s. Let P be the foot of the perpendicular from A to the line defined by B, and let PA be the projection of BA onto a vector v, where the sum of the components of v is 2. Find the vector v. The final answer is (-6, 8)."
    },
    "a_4": {
        "formal problem": "theorem\nfixes t s v1 v2 :: real and l m :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"v1 + v2 = 2\"\nand h3 : \"\\<exists> A B P. A \\<in> range l \\<and> B \\<in> range m \\<and> P is the foot of the perpendicular from A to m \\<and> P - A = projection (B - A) onto (v1, v2)\"\nshows  \"(v1, v2) = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes t s v1 v2 :: real and l m :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"v1 + v2 = 2\"\nand h3 : \"\\<exists> A B P. A \\<in> range l \\<and> B \\<in> range m \\<and> P is the foot of the perpendicular from A to m \\<and> P - A = projection (B - A) onto (v1, v2)\"\nshows  \"(v1, v2) = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two parametric lines $l(t) = (1 + 4t, 4 + 3t)$ and $m(s) = (-5 + 4s, 6 + 3s)$, and a vector $(v1, v2)$ with $v1 + v2 = 2$. If there exists points $A$ on line $l$, $B$ on line $m$, and $P$ is the foot of the perpendicular from $A$ to line $m$, such that the vector from $P$ to $A$ is the projection of vector from $B$ to $A$ onto vector $(v1, v2)$, then find the values of $v1$ and $v2$. The final answer is $v1 = -6$ and $v2 = 8$."
    },
    "a_5": {
        "formal problem": "theorem\nfixes v :: \"real \\<Rightarrow> real \\<times> real\"\nassumes h0 : \"A = (\\<lambda>t. (1 + 4 * t, 4 + 3 * t))\"\nand h1 : \"B = (\\<lambda>s. (-5 + 4 * s, 6 + 3 * s))\"\nand h2 : \"P = (\\<lambda>u. (u, u))\"\nand h3 : \"\\<forall>t s. P t = A s \\<or> P t = B s \\<longrightarrow> (fst (v t) + snd (v t) = 2)\"\nand h4 : \"\\<forall>t s. P t = A s \\<longrightarrow> v t = (fst (B s) - fst (A s), snd (B s) - snd (A s))\"\nshows  \"v = (\\<lambda>t. (-6, 8))\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes v :: \"real \\<Rightarrow> real \\<times> real\"\nassumes h0 : \"A = (\\<lambda>t. (1 + 4 * t, 4 + 3 * t))\"\nand h1 : \"B = (\\<lambda>s. (-5 + 4 * s, 6 + 3 * s))\"\nand h2 : \"P = (\\<lambda>u. (u, u))\"\nand h3 : \"\\<forall>t s. P t = A s \\<or> P t = B s \\<longrightarrow> (fst (v t) + snd (v t) = 2)\"\nand h4 : \"\\<forall>t s. P t = A s \\<longrightarrow> v t = (fst (B s) - fst (A s), snd (B s) - snd (A s))\"\nshows  \"v = (\\<lambda>t. (-6, 8))\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Suppose that points A and B in a Cartesian coordinate system are given by the parametric equations A(t) = (1 + 4t, 4 + 3t) and B(s) = (-5 + 4s, 6 + 3s) respectively. Now, consider a point P(u) = (u, u). If there exists a function v such that for any t and s, whenever P(t) equals either A(s) or B(s), then the sum of the coordinates of v(t) is 2. Furthermore, if P(t) equals A(s), then v(t) is the vector from A to B. Then, the function v is defined as v(t) = (-6, 8)."
    },
    "a_6": {
        "formal problem": "theorem\nfixes l m v1 v2 :: real\nassumes h0 : \"\\<forall> t. l = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall> s. m = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"v1 + v2 = 2\"\nand h3 : \"\\<forall> A B P. A \\<in> l \\<and> B \\<in> m \\<and> P is the foot of the perpendicular from A to m\n  \\<longrightarrow> vector P A is the projection of vector B A onto (v1, v2)\"\nshows  \"(v1, v2) = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes l m v1 v2 :: real\nassumes h0 : \"\\<forall> t. l = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall> s. m = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"v1 + v2 = 2\"\nand h3 : \"\\<forall> A B P. A \\<in> l \\<and> B \\<in> m \\<and> P is the foot of the perpendicular from A to m\n  \\<longrightarrow> vector P A is the projection of vector B A onto (v1, v2)\"\nshows  \"(v1, v2) = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider two lines $l$ and $m$ in a plane. The line $l$ is parameterized by $t$ and given by the equation $(1 + 4t, 4 + 3t)$, and the line $m$ is parameterized by $s$ and given by the equation $(-5 + 4s, 6 + 3s)$. Given two real numbers $v1$ and $v2$ such that $v1 + v2 = 2$, if for every point $A$ on line $l$ and every point $B$ on line $m$, the projection of the vector from $B$ to $A$ onto the vector from $P$ to $A$ (where $P$ is the foot of the perpendicular from $A$ to line $m$) is the vector $(v1, v2)$, find the values of $v1$ and $v2$. The final answer is $v1 = -6, v2 = 8$."
    },
    "a_7": {
        "formal problem": "theorem\nfixes l m A B P :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A = l t\"\nand h3 : \"B = m s\"\nand h4 : \"P = foot_of_perpendicular A m\"\nand h5 : \"vector_from P to A = projection_of vector_from B to A onto vector v\"\nand h6 : \"v = (v1, v2)\"\nand h7 : \"v1 + v2 = 2\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes l m A B P :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A = l t\"\nand h3 : \"B = m s\"\nand h4 : \"P = foot_of_perpendicular A m\"\nand h5 : \"vector_from P to A = projection_of vector_from B to A onto vector v\"\nand h6 : \"v = (v1, v2)\"\nand h7 : \"v1 + v2 = 2\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider two lines, line $l$ and line $m$ in the plane. Line $l$ is parametrized by $l(t)=(1+4t, 4+3t)$ and line $m$ is parametrized by $m(s)=(-5+4s, 6+3s)$. Let $A$ be a point on line $l$ and $B$ be a point on line $m$. Let $P$ be the foot of the perpendicular from $A$ to line $m$. Suppose that the vector from $P$ to $A$ is equal to the projection of the vector from $B$ to $A$ onto a vector $v$. Given that $v = (v1, v2)$ and $v1 + v2 = 2$, find the vector $v$. The final answer is $v = (-6, 8)$."
    },
    "a_8": {
        "formal problem": "theorem\nfixes A B P :: \"real*real\" \nand l m :: \"real \\<Rightarrow> real*real\" \nand v :: \"real*real\"\nassumes h0 : \"\\<forall>t. l t = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall>s. m s = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P \\<in> range m\"\nand h5 : \"fst A - fst P = snd A - snd P\"\nand h6 : \"fst v + snd v = 2\"\nand h7 : \"(fst A - fst P, snd A - snd P) = ((fst B - fst A) * fst v, (snd B - snd A) * snd v)\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes A B P :: \"real*real\" \nand l m :: \"real \\<Rightarrow> real*real\" \nand v :: \"real*real\"\nassumes h0 : \"\\<forall>t. l t = (1 + 4*t, 4 + 3*t)\"\nand h1 : \"\\<forall>s. m s = (-5 + 4*s, 6 + 3*s)\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P \\<in> range m\"\nand h5 : \"fst A - fst P = snd A - snd P\"\nand h6 : \"fst v + snd v = 2\"\nand h7 : \"(fst A - fst P, snd A - snd P) = ((fst B - fst A) * fst v, (snd B - snd A) * snd v)\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider two parametric lines in the plane, l and m, defined by l(t) = (1 + 4t, 4 + 3t) and m(s) = (-5 + 4s, 6 + 3s), respectively. Let A be a point on line l, B and P be points on line m. Given that the difference in the x-coordinates of points A and P is equal to the difference in their y-coordinates, and a vector v with the property that the sum of its coordinates equals 2, and that the difference in coordinates between points A and P is equal to the difference in coordinates between points B and A scaled by vector v. What is the vector v? The final answer is (-6, 8)."
    },
    "a_9": {
        "formal problem": "theorem\nfixes A B P :: \"real \\<times> real\"\nand l m :: \"real \\<Rightarrow> real \\<times> real\"\nand v :: \"real \\<times> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P = (fst B - fst A, snd B - snd A)\"\nand h5 : \"v = (fst P, snd P)\"\nand h6 : \"fst v + snd v = 2\"\nshows  \"v = (-6, 8)\"",
        "formal solution": "(* ### Problem\n Consider two lines: line $l$ parametrized as\n\\begin{align*} \nx &= 1 + 4t,\\\\\ny &=  4 + 3t\n\\end{align*}and the line $m$ parametrized as\n\\begin{align*} \nx &=-5  + 4s\\\\\ny &=  6 + 3s.\n\\end{align*}Let $A$ be a point on line $l$, $B$ be a point on line $m$, and let $P$ be the foot of the perpendicular from $A$ to line $m$.\n\nThen $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto some vector $\\begin{pmatrix} v_1\\\\v_2\\end{pmatrix}$ such that $v_1+v_2 = 2$. Find $\\begin{pmatrix}v_1 \\\\ v_2 \\end{pmatrix}$. The final Answer is \\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}\n ### Proof\n As usual, we start by graphing these lines. An easy way to go about it is to plot some points.\n Let's plug in $t =0$ and $t = 1$ for line $l$, getting the points $(1, 4)$ and $(5, 7)$. Here's our line: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A= (1,4);  pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  label(\"$l$\", A-1.8dir, SE); dot(\"$t = 0$\", A, SE); dot(\"$t = 1$\", A + dir, SE);  [/asy]\n Similarly, we plug in $s = 0$ and $s = 1$ for line $m$, getting the points $(-5, 6)$ and $(-1, 9)$: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4); \n pair B = (-5, 6); //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12));  label(\"$l$\", A+dir, SE);  label(\"$m$\",P+dir, NW);  dot(\"$s = 0$\", B, NW); dot(\"$s = 1$\", B + dir,NW);  [/asy]\n Now we label some points $A$ and $B$, as well as point $P$, and we draw in our vectors: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true);\n draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm));  draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); label(\"$l$\", A+dir, SE); \n label(\"$m$\", P+dir, NW);  dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$B$\", B, NW); [/asy] Recall that when we project $\\mathbf{v}$ onto $\\mathbf{u}$, we place the tail of $\\mathbf{v}$ onto a line with direction $\\mathbf{u}$, then we drop a perpendicular and draw the vector from the tail of $\\mathbf{v}$ to the foot of the perpendicular.\n This picture actually doesn't look like our usual projection picture! The vector we're projecting and the projection aren't tail to tail, which makes things harder to visualize.\n Let's shift the vector over and see if it helps, choosing $Q$ such that \\[\\overrightarrow{BQ} = \\overrightarrow{PA}.\\]Here's the picture: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box.\n path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax)  {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle); \n     return endpoints[1]--endpoints[0];  } pair A = (1,4); pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir);\n //End of the shifted vector PA:  pair Q = B+A-P;  rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, SE); dot(\"$B$\", B, NW); [/asy] That looks better! Our shifted vector $\\overrightarrow{BQ}$ is tail to tail with the vector being projected. In fact, since this vector is perpendicular to lines $l$ and $m$, we know that it lies along a line with direction\n \\[\\mathbf{u} = \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Here's the picture with the line added in: [asy] size(200); import TrigMacros; import olympiad; //Gives the maximum line that fits in the box. path maxLine(pair A, pair B, real xmin, real xmax, real ymin, real ymax) \n {     path[] endpoints;      endpoints = intersectionpoints(A+10(B-A) -- A-10(B-A), (xmin, ymin)--(xmin, ymax)--(xmax, ymax)--(xmax, ymin)--cycle);      return endpoints[1]--endpoints[0];  } pair A = (1,4);\n pair B= (-5, 6);  //Direction vector of the parallel lines pair dir = (4,3); //Foot of the perpendicular from A to the other line pair P = foot(A, B-dir, B+dir); //End of the shifted vector PA:  pair Q = B+A-P; \n rr_cartesian_axes(-8,8,-5,12,complexplane=false,usegrid=true); draw(maxLine(A,A+dir, -8,8,-5,12));  draw(maxLine(B,B+dir, -8,8,-5,12)); draw(maxLine(B,Q, -8,8,-5,12)); draw(P--A, red, Arrow(size = 0.3cm)); \n draw(B--A, blue, Arrow(size = 0.3cm));  draw(rightanglemark(A, P, P + (P-B), 15)); draw(B--Q, red, Arrow(size = 0.3cm));  draw(rightanglemark(B,Q, A-2*dir, 15)); label(\"$l$\", A+dir, SE);  label(\"$m$\", P+dir, NW); \n dot(\"$A$\", A, SE); dot(\"$P$\", P, NW); dot(\"$Q$\",Q, 2*S); dot(\"$B$\", B, 2*S); [/asy] If you want to make sure you're visualizing this correctly, imagine the picture above with lines $l$ and $m$ removed: it should become clear that\n \\[\\overrightarrow{BQ}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Of course, since $\\overrightarrow{PA}$ is equal to $\\overrightarrow{BQ}$, we see that\n \\[\\overrightarrow{PA}  = \\text{The projection of $\\overrightarrow{BA}$ onto } \\begin{pmatrix} 3 \\\\-4 \\end{pmatrix}.\\]Now, we need to be projecting onto a vector whose components add to $2$.\n We know that we're in fact projecting onto any non-zero scalar multiple of our vector, so we use \\[-2\\mathbf{u} = \\begin{pmatrix} -6 \\\\ 8 \\end{pmatrix}\\]instead.\n Therefore, $\\overrightarrow{PA}$ is the projection of $\\overrightarrow{BA}$ onto $\\boxed{\\begin{pmatrix}-6 \\\\ 8 \\end{pmatrix}}.$\n *)\n\ntheorem\nfixes A B P :: \"real \\<times> real\"\nand l m :: \"real \\<Rightarrow> real \\<times> real\"\nand v :: \"real \\<times> real\"\nassumes h0 : \"\\<forall> t. l t = (1 + 4 * t, 4 + 3 * t)\"\nand h1 : \"\\<forall> s. m s = (-5 + 4 * s, 6 + 3 * s)\"\nand h2 : \"A \\<in> range l\"\nand h3 : \"B \\<in> range m\"\nand h4 : \"P = (fst B - fst A, snd B - snd A)\"\nand h5 : \"v = (fst P, snd P)\"\nand h6 : \"fst v + snd v = 2\"\nshows  \"v = (-6, 8)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two functions l(t) = (1 + 4t, 4 + 3t) and m(s) = (-5 + 4s, 6 + 3s), with A belonging to the range of l and B belonging to the range of m. Let P be the difference between B and A. Vector v is defined as P. If the sum of the first and second components of v equals 2, find the vector v. The final answer is (-6, 8)."
    },
    "level": "Level 5",
    "type": "Precalculus"
}