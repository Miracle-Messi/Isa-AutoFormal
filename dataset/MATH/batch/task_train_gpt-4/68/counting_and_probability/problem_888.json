{
    "natural problem": "What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy]",
    "natural solution": [
        "Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.",
        "This process doesn't change which tiles share a side. )."
    ],
    "natural answer": "2",
    "a_0": {
        "formal problem": "theorem\nfixes tessellation_colors :: nat\nassumes h0 : \"no_adjacent_same_color tessellation_colors\"\nshows  \"tessellation_colors \\<ge> 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_colors :: nat\nassumes h0 : \"no_adjacent_same_color tessellation_colors\"\nshows  \"tessellation_colors \\<ge> 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation, no two adjacent regions have the same color. What is the minimum number of colors needed for such a tessellation? The final answer is at least 2."
    },
    "a_1": {
        "formal problem": "theorem\nfixes tessellation_colors :: nat\nassumes h0 : \"\\<forall> tiles_sharing_side. tiles_sharing_side \\<noteq> tessellation_colors\"\nshows  \"tessellation_colors = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_colors :: nat\nassumes h0 : \"\\<forall> tiles_sharing_side. tiles_sharing_side \\<noteq> tessellation_colors\"\nshows  \"tessellation_colors = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation, no two tiles sharing a side have the same color. What is the minimum number of colors required for such a tessellation? The final answer is 2."
    },
    "a_2": {
        "formal problem": "theorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>n. tessellation_coloring n = 1 \\<or> tessellation_coloring n = 2\"\nand h1 : \"\\<forall>n m. adjacent_tiles n m \\<longrightarrow> tessellation_coloring n \\<noteq> tessellation_coloring m\"\nshows  \"least_number_of_colors = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>n. tessellation_coloring n = 1 \\<or> tessellation_coloring n = 2\"\nand h1 : \"\\<forall>n m. adjacent_tiles n m \\<longrightarrow> tessellation_coloring n \\<noteq> tessellation_coloring m\"\nshows  \"least_number_of_colors = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation coloring, each tile is assigned either color 1 or color 2. If two tiles are adjacent, they must have different colors. What is the least number of colors needed for such a tessellation coloring? The final answer is 2."
    },
    "a_3": {
        "formal problem": "theorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>tile1 tile2. (shares_side tile1 tile2) \\<longrightarrow> tessellation_coloring tile1 \\<noteq> tessellation_coloring tile2\"\nshows  \"LEAST n. \\<forall> tile. \\<exists> color. color \\<in> {1..n} \\<and> tessellation_coloring tile = color\" = 2",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>tile1 tile2. (shares_side tile1 tile2) \\<longrightarrow> tessellation_coloring tile1 \\<noteq> tessellation_coloring tile2\"\nshows  \"LEAST n. \\<forall> tile. \\<exists> color. color \\<in> {1..n} \\<and> tessellation_coloring tile = color\" = 2\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation, any two tiles that share a side are colored differently. What is the least number of colors required to color the tessellation so that this property holds? The final answer is 2."
    },
    "a_4": {
        "formal problem": "theorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>x y. (x \\<noteq> y) \\<longrightarrow> (tessellation_coloring x \\<noteq> tessellation_coloring y)\"\nshows  \"card (range tessellation_coloring) \\<ge> 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_coloring :: \"int \\<Rightarrow> int\"\nassumes h0 : \"\\<forall>x y. (x \\<noteq> y) \\<longrightarrow> (tessellation_coloring x \\<noteq> tessellation_coloring y)\"\nshows  \"card (range tessellation_coloring) \\<ge> 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation coloring, no two adjacent regions have the same color. What is the minimum number of colors required for such a coloring? The final answer is at least 2."
    },
    "a_5": {
        "formal problem": "theorem\nfixes tessellation_colors :: nat\nassumes h0 : \"tessellation_colors \\<ge> 2\"\nand h1 : \"\\<forall> t1 t2. t1 \\<noteq> t2 \\<and> t1 shares_side_with t2 \\<longrightarrow> t1 has_different_color_from t2\"\nshows  \"tessellation_colors = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_colors :: nat\nassumes h0 : \"tessellation_colors \\<ge> 2\"\nand h1 : \"\\<forall> t1 t2. t1 \\<noteq> t2 \\<and> t1 shares_side_with t2 \\<longrightarrow> t1 has_different_color_from t2\"\nshows  \"tessellation_colors = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In a tessellation, there are at least two colors used. If two tiles share a side, they must have different colors. Prove that exactly two colors are used in this tessellation."
    },
    "a_6": {
        "formal problem": "theorem\nfixes tessellation :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"tessellation 0 = 2\"\nand h1 : \"\\<forall>n. tessellation (Suc n) = tessellation n\"\nshows  \"tessellation 0 = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"tessellation 0 = 2\"\nand h1 : \"\\<forall>n. tessellation (Suc n) = tessellation n\"\nshows  \"tessellation 0 = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Determine the value of a function called \"tessellation\" when the input is 0. The tessellation function is defined as follows: for any natural number n, tessellation(n) is equal to tessellation(n-1), and tessellation(0) is equal to 2. What is the value of tessellation(0)? The final answer is 2."
    },
    "a_7": {
        "formal problem": "theorem\nfixes tessellation_colors :: nat\nassumes h0 : \"tessellation_colors = (LEAST n. \\<forall> tiles. tiles_sharing_side tiles \\<longrightarrow> distinct_colors tiles n)\"\nshows  \"tessellation_colors = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation_colors :: nat\nassumes h0 : \"tessellation_colors = (LEAST n. \\<forall> tiles. tiles_sharing_side tiles \\<longrightarrow> distinct_colors tiles n)\"\nshows  \"tessellation_colors = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the minimum number of colors needed for a tessellation such that no two tiles sharing a side have the same color. The final answer is 2."
    },
    "a_8": {
        "formal problem": "theorem\nfixes tessellation :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall>x. tessellation x \\<noteq> tessellation (x + 1) \\<and> tessellation x \\<noteq> tessellation (x - 1)\"\nshows  \"LEAST n. \\<forall>x. tessellation x \\<in> {1..n} = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem\nfixes tessellation :: \"real \\<Rightarrow> real\"\nassumes h0 : \"\\<forall>x. tessellation x \\<noteq> tessellation (x + 1) \\<and> tessellation x \\<noteq> tessellation (x - 1)\"\nshows  \"LEAST n. \\<forall>x. tessellation x \\<in> {1..n} = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a function called \"tessellation\" that has the property that for any value $x$, $tessellation(x) \\neq tessellation(x+1)$ and $tessellation(x) \\neq tessellation(x-1)$. Find the smallest integer $n$ such that for all $x$, $tessellation(x)$ takes a value in the set $\\{1, 2, \\dots, n\\}$, and show that $n = 2$."
    },
    "a_9": {
        "formal problem": "theorem tessellation_coloring:\nfixes n :: nat\nassumes h0 : \"n \\<ge> 1\"\nshows  \"least_number_of_colors n = 2\"",
        "formal solution": "(* ### Problem\n What is the least number of colors needed to shade the tessellation shown, such that no two tiles sharing a side are the same color?\n\n[asy]\ndraw((-8,-2)--(8,-2));\ndraw((-8,2)--(8,2));\ndraw((-8,6)--(8,6));\ndraw((-8,10)--(8,10));\ndraw((-8,14)--(8,14));\npath a=(-8,14)--(-6.5,12)--(-10,8)--(-6.5,4)--(-10,0)--(-8,-2);\ndraw(a);\ndraw(shift((4,0))*a);\ndraw(shift((8,0))*a);\ndraw(shift((12,0))*a);\ndraw(shift((16,0))*a);\n[/asy] The final Answer is 2\n ### Proof\n Clearly one color isn't enough; $\\boxed{2}$ colors will work because the tessellation shown is topologically identical to a chessboard (that is, imagine straightening out the diagonal lines to form an array of squares.\n This process doesn't change which tiles share a side. ).\n *)\n\ntheorem tessellation_coloring:\nfixes n :: nat\nassumes h0 : \"n \\<ge> 1\"\nshows  \"least_number_of_colors n = 2\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the least number of colors required to color a tessellation with $n \\geq 1$ polygons such that no two adjacent polygons have the same color. The final answer is 2."
    },
    "level": "Level 3",
    "type": "Counting & Probability"
}