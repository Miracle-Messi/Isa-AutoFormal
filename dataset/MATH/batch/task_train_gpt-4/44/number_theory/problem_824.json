{
    "natural problem": "Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2.",
    "natural solution": [
        "It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.",
        "This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.",
        "Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\",
        "& & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$."
    ],
    "natural answer": "11011100_2",
    "a_0": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of BL [True, False, True, True, False])\"\nand h1 : \"b = nat (bin_of BL [True, False, True, False, False])\"\nand h2 : \"c = nat (bin_of BL [True, False])\"\nand h3 : \"a * b div c = nat (bin_of BL [True, True, False, True, True, True, False, False])\"\nshows  \"nat (bin_of BL [True, True, False, True, True, True, False, False]) = nat (bin_of BL [True, True, False, True, True, True, False, False])\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of BL [True, False, True, True, False])\"\nand h1 : \"b = nat (bin_of BL [True, False, True, False, False])\"\nand h2 : \"c = nat (bin_of BL [True, False])\"\nand h3 : \"a * b div c = nat (bin_of BL [True, True, False, True, True, True, False, False])\"\nshows  \"nat (bin_of BL [True, True, False, True, True, True, False, False]) = nat (bin_of BL [True, True, False, True, True, True, False, False])\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In binary, let a be 10110, b be 10100, and c be 10. If the result of a * b divided by c is 11011100, prove that 11011100 equals 11011100."
    },
    "a_1": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = bin_of_nat 22\"\nand h1 : \"b = bin_of_nat 20\"\nand h2 : \"c = bin_of_nat 2\"\nand h3 : \"c > 0\"\nshows  \"nat_of_bin (bin_of_nat (a * b div c)) = 220\" (* 11011100_2 *)",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = bin_of_nat 22\"\nand h1 : \"b = bin_of_nat 20\"\nand h2 : \"c = bin_of_nat 2\"\nand h3 : \"c > 0\"\nshows  \"nat_of_bin (bin_of_nat (a * b div c)) = 220\" (* 11011100_2 *)\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given that $a$ is the binary representation of 22, $b$ is the binary representation of 20, and $c$ is the binary representation of 2, and that $c$ is greater than 0, find the decimal representation of the binary number resulting from $a * b$ divided by $c$. The final answer is 220."
    },
    "a_2": {
        "formal problem": "theorem\nfixes x y z :: int\nassumes h0 : \"x = bin_of_string \"\nand h1 : \"\"\nand h2 : \"y = bin_of_string \"\nand h3 : \"\"\nand h4 : \"z = bin_of_string \"\nand h5 : \"\"\nshows  \"(x * y) div z = bin_of_string \"11011100\"\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes x y z :: int\nassumes h0 : \"x = bin_of_string \"\nand h1 : \"\"\nand h2 : \"y = bin_of_string \"\nand h3 : \"\"\nand h4 : \"z = bin_of_string \"\nand h5 : \"\"\nshows  \"(x * y) div z = bin_of_string \"11011100\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find integers $x$, $y$, and $z$ such that when $x$ is multiplied by $y$ and the result is divided by $z$, the binary representation of the result is '11011100'."
    },
    "a_3": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of BL [B1, B0, B1, B1, B0])\"\nand h1 : \"b = nat (bin_of BL [B1, B0, B1, B0, B0])\"\nand h2 : \"c = nat (bin_of BL [B1, B0])\"\nand h3 : \"c \\<noteq> 0\"\nshows  \"a * b div c = nat (bin_of BL [B1, B1, B0, B1, B1, B1, B0, B0])\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of BL [B1, B0, B1, B1, B0])\"\nand h1 : \"b = nat (bin_of BL [B1, B0, B1, B0, B0])\"\nand h2 : \"c = nat (bin_of BL [B1, B0])\"\nand h3 : \"c \\<noteq> 0\"\nshows  \"a * b div c = nat (bin_of BL [B1, B1, B0, B1, B1, B1, B0, B0])\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given three binary numbers $a=10110_2$, $b=10100_2$, and $c=10_2$, where $c$ is not zero. Find the result of the division of the product of $a$ and $b$ by $c$. The final answer is $11011100_2$."
    },
    "a_4": {
        "formal problem": "theorem\nfixes a b c :: int\nassumes h0 : \"a = bin_of_string \"\nand h1 : \"\"\nand h2 : \"b = bin_of_string \"\nand h3 : \"\"\nand h4 : \"c = bin_of_string \"\nand h5 : \"\"\nshows  \"a * b div c = bin_of_string \"11011100\"\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: int\nassumes h0 : \"a = bin_of_string \"\nand h1 : \"\"\nand h2 : \"b = bin_of_string \"\nand h3 : \"\"\nand h4 : \"c = bin_of_string \"\nand h5 : \"\"\nshows  \"a * b div c = bin_of_string \"11011100\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Multiply binary number $a$ with binary number $b$ and then divide the result by binary number $c$. The final result should be binary number \"11011100\"."
    },
    "a_5": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nand h4 : \"c = nat (bin_of_string \"\nand h5 : \")\"\nshows  \"string_of_bin (bin_of_nat (a * b div c)) = \"11011100\"\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nand h4 : \"c = nat (bin_of_string \"\nand h5 : \")\"\nshows  \"string_of_bin (bin_of_nat (a * b div c)) = \"11011100\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Multiply binary numbers `a` and `b` together, then divide the result by binary number `c`. Convert the result back to a binary number. The binary result should be '11011100'."
    },
    "a_6": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nand h4 : \"c = nat (bin_of_string \"\nand h5 : \")\"\nshows  \"(a * b) div c = nat (bin_of_string \"11011100\")\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nand h4 : \"c = nat (bin_of_string \"\nand h5 : \")\"\nshows  \"(a * b) div c = nat (bin_of_string \"11011100\")\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given three natural numbers a, b, and c, each represented by a binary string. If we multiply a and b, and then divide the result by c, the result is the natural number represented by the binary string \"11011100\"."
    },
    "a_7": {
        "formal problem": "theorem\nfixes x y z :: nat\nassumes h0 : \"x = nat (bin_of BLITs [True, True, False, True, False])\"\nand h1 : \"y = nat (bin_of BLITs [True, False, True, False, False])\"\nand h2 : \"z = nat (bin_of BLITs [False, True])\"\nshows  \"x * y div z = nat (bin_of BLITs [False, False, True, True, False, True, True])\" (* 11011100 in binary *)",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes x y z :: nat\nassumes h0 : \"x = nat (bin_of BLITs [True, True, False, True, False])\"\nand h1 : \"y = nat (bin_of BLITs [True, False, True, False, False])\"\nand h2 : \"z = nat (bin_of BLITs [False, True])\"\nshows  \"x * y div z = nat (bin_of BLITs [False, False, True, True, False, True, True])\" (* 11011100 in binary *)\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given the binary numbers x = 11010, y = 10100, and z = 10, what is the result of the operation (x * y) / z? The result is the binary number 00110100."
    },
    "a_8": {
        "formal problem": "theorem\nfixes a b c :: nat\nassumes h0 : \"a = bin_of_nat 22\"\nand h1 : \"b = bin_of_nat 20\"\nand h2 : \"c = bin_of_nat 2\"\nshows  \"(a * b) div c = bin_of_nat 220\" (* 11011100_2 *)",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem\nfixes a b c :: nat\nassumes h0 : \"a = bin_of_nat 22\"\nand h1 : \"b = bin_of_nat 20\"\nand h2 : \"c = bin_of_nat 2\"\nshows  \"(a * b) div c = bin_of_nat 220\" (* 11011100_2 *)\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given that $a$ is the binary representation of 22, $b$ is the binary representation of 20, and $c$ is the binary representation of 2, find the binary representation of the result when $a$ times $b$ is divided by $c$. The final answer should be the binary representation of 220."
    },
    "a_9": {
        "formal problem": "theorem \nfixes x y z :: int\nassumes h0 : \"x = bin_of_string ''10110''\"\nand h1 : \"y = bin_of_string ''10100''\"\nand h2 : \"z = bin_of_string ''10''\"\nshows  \"(x * y) div z = bin_of_string ''11011100''\"",
        "formal solution": "(* ### Problem\n Find $10110_2\\times10100_2\\div10_2$. Express your answer in base 2. The final Answer is 11011100_2\n ### Proof\n It is much easier to find $10110_2\\div10_2$ and then multiply by $10100_2$ than it is to do the calculations in the original order. For $10110_2\\div10_2$, since the last digit of $10110_2$ is a 0, we can simply take it off to get $1011_2$.\n This is similar to base 10, where $10110_{10}\\div10_{10}=1011_{10}$. In base 2, each place represents a power of 2, and since we're dividing by 2, each place goes down by a power 2, so each digit shifts to the right.\n Now we find the product of $1011_2$ and $10100_2$. $$\\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c@{}c@{}c} & & &1 &0 & 1 & 1_2 & & \\\\ & & & \\times & 1& 0 & 1& 0 & 0_2 \\\\ \\cline{1-9}& & &1 &0 &1 &1 & & \\\\\n & & & & & &0 & & \\\\ & 1 &\\stackrel{1}{0}&1 &1 &0 &0 &\\downarrow &\\downarrow \\\\ \\cline{1-9} &1 &1 &0 &1 &1 &1 &0 &0_2 \\\\ \\end{array}$$The answer is $\\boxed{11011100_2}$.\n *)\n\ntheorem \nfixes x y z :: int\nassumes h0 : \"x = bin_of_string ''10110''\"\nand h1 : \"y = bin_of_string ''10100''\"\nand h2 : \"z = bin_of_string ''10''\"\nshows  \"(x * y) div z = bin_of_string ''11011100''\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Multiply the binary numbers 10110 and 10100, then divide the result by the binary number 10. What is the final result in binary? The final answer is 11011100."
    },
    "level": "Level 5",
    "type": "Number Theory"
}