{
    "natural problem": "In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n",
    "natural solution": [
        "Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).",
        "Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.",
        "Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.",
        "We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.",
        "Thus, $b_{n+1} = a_n$.",
        "We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.",
        "Thus, $c_{n+1} = 2b_n$.",
        "Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.",
        "Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$."
    ],
    "natural answer": "936",
    "a_0": {
        "formal problem": "theorem\nfixes Zuminglish_words :: \"char list \\<Rightarrow> bool\" \nand N :: nat\nassumes h0 : \"\\<forall> w. Zuminglish_words w = (length w = 10 \\<and> (\\<forall>i<length w - 1. (w!i = CHR ''O'' \\<and> w!(i+1) = CHR ''O'') \\<longrightarrow> (i \\<ge> 2 \\<and> w!(i-1) \\<noteq> CHR ''O'' \\<and> w!(i-2) \\<noteq> CHR ''O'')))\"\nand h1 : \"N = card {w. Zuminglish_words w}\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem\nfixes Zuminglish_words :: \"char list \\<Rightarrow> bool\" \nand N :: nat\nassumes h0 : \"\\<forall> w. Zuminglish_words w = (length w = 10 \\<and> (\\<forall>i<length w - 1. (w!i = CHR ''O'' \\<and> w!(i+1) = CHR ''O'') \\<longrightarrow> (i \\<ge> 2 \\<and> w!(i-1) \\<noteq> CHR ''O'' \\<and> w!(i-2) \\<noteq> CHR ''O'')))\"\nand h1 : \"N = card {w. Zuminglish_words w}\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "In the Zuminglish language, a word is valid if it has exactly 10 characters and any two consecutive 'O' characters appear only if they are not preceded by two 'O' characters. What is the remainder when the total number of such valid Zuminglish words is divided by 1000? The final answer is 936."
    },
    "a_1": {
        "formal problem": "Sorry, but it's not possible to translate this natural language problem into the Isabelle version as it is a mathematical problem that requires an algorithm to solve and doesn't directly translate to a theorem or an equation. Isabelle is used for formal proof verification and not for executing algorithms or solving combinatorial problems.",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\nSorry, but it's not possible to translate this natural language problem into the Isabelle version as it is a mathematical problem that requires an algorithm to solve and doesn't directly translate to a theorem or an equation. Isabelle is used for formal proof verification and not for executing algorithms or solving combinatorial problems.\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "It seems like there has been a misunderstanding. The provided text does not contain an Isabelle code or theorem to translate into a natural language problem. Please provide an Isabelle theorem for translation."
    },
    "a_2": {
        "formal problem": "theorem\nfixes N :: nat\nassumes h0 : \"length (filter (\\<lambda>x. x = 'O') N) * 2 \\<le> length (filter (\\<lambda>x. x \\<in> {'M', 'P'}) N)\"\nand h1 : \"length N = 10\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem\nfixes N :: nat\nassumes h0 : \"length (filter (\\<lambda>x. x = 'O') N) * 2 \\<le> length (filter (\\<lambda>x. x \\<in> {'M', 'P'}) N)\"\nand h1 : \"length N = 10\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given a 10-character string, $N$, where the number of 'O' characters is no more than half the number of 'M' and 'P' characters combined. Find the remainder when you divide the numerical representation of $N$ by 1000. The final answer is 936."
    },
    "a_3": {
        "formal problem": "theorem \nfixes N :: int\nassumes h0 : \"\\<forall>word. length word = 10 \\<longrightarrow> \n  (let num_O = count (op = 'O') word; \n      num_M_P = count (op = 'M') word + count (op = 'P') word \n  in num_O * 2 \\<le> num_M_P)\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem \nfixes N :: int\nassumes h0 : \"\\<forall>word. length word = 10 \\<longrightarrow> \n  (let num_O = count (op = 'O') word; \n      num_M_P = count (op = 'M') word + count (op = 'P') word \n  in num_O * 2 \\<le> num_M_P)\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "For every word of length 10, the count of the letter 'O' multiplied by 2 is less than or equal to the sum of the counts of 'M' and 'P'. Find the integer N such that when it is divided by 1000, the remainder is 936."
    },
    "a_4": {
        "formal problem": "theorem\nfixes N :: int and Zuminglish :: \"string \\<Rightarrow> bool\"\nassumes h0 : \"Zuminglish w \\<longleftrightarrow> length w = 10 \\<and> (\\<forall>i<length w. (w!i = 'O' \\<longrightarrow> (i>0 \\<and> w!(i-1) \\<noteq> 'O' \\<and> (i<length w - 1 \\<longrightarrow> w!(i+1) \\<noteq> 'O'))))\"\nand h1 : \"N = card {w. Zuminglish w}\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem\nfixes N :: int and Zuminglish :: \"string \\<Rightarrow> bool\"\nassumes h0 : \"Zuminglish w \\<longleftrightarrow> length w = 10 \\<and> (\\<forall>i<length w. (w!i = 'O' \\<longrightarrow> (i>0 \\<and> w!(i-1) \\<noteq> 'O' \\<and> (i<length w - 1 \\<longrightarrow> w!(i+1) \\<noteq> 'O'))))\"\nand h1 : \"N = card {w. Zuminglish w}\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a language, Zuminglish, in which a word is defined as a string of length 10. In this language, the character 'O' appears in a word only if it is not immediately preceded or followed by another 'O'. How many unique words can be formed under these conditions? The final answer is a number that, when divided by 1000, leaves a remainder of 936."
    },
    "a_5": {
        "formal problem": "The problem involves complex combinatorial calculations and does not have a direct one-line translation to Isabelle language. However, an Isabelle version of the problem could be started as follows:\n\ndatatype Char = M | O | P\n\ntypedef Word = \"{w::Char list. length w = 10 \\<and> (\\<forall>i<8. (w!i = O \\<longrightarrow> (w!(i+1) \\<noteq> O \\<and> w!(i+2) \\<noteq> O)))}\"\n\ndefinition N :: \"int\" where\n\"N = card (UNIV :: Word set)\"\n\ntheorem\nshows  \"N mod 1000 = 936\"\n\nThe datatype `Char` represents the characters M, O, P. `Word` represents 10-letter words that satisfy the condition that at least two consonants appear between any two O's. `N` is the number of such words. The theorem states that the remainder when `N` is divided by 1000 is 936. This Isabelle representation sets up the problem but does not provide a way to automatically calculate `N`.",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\nThe problem involves complex combinatorial calculations and does not have a direct one-line translation to Isabelle language. However, an Isabelle version of the problem could be started as follows:\n\ndatatype Char = M | O | P\n\ntypedef Word = \"{w::Char list. length w = 10 \\<and> (\\<forall>i<8. (w!i = O \\<longrightarrow> (w!(i+1) \\<noteq> O \\<and> w!(i+2) \\<noteq> O)))}\"\n\ndefinition N :: \"int\" where\n\"N = card (UNIV :: Word set)\"\n\ntheorem\nshows  \"N mod 1000 = 936\"\n\nThe datatype `Char` represents the characters M, O, P. `Word` represents 10-letter words that satisfy the condition that at least two consonants appear between any two O's. `N` is the number of such words. The theorem states that the remainder when `N` is divided by 1000 is 936. This Isabelle representation sets up the problem but does not provide a way to automatically calculate `N`.\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider all 10-letter words that can be formed using the letters M, O, and P. How many such words are there such that there are at least two consonants (M or P) between any two O's? What is the remainder when the number of these words is divided by 1000? The final answer is 936."
    },
    "a_6": {
        "formal problem": "theorem\nfixes N :: \"int \\<Rightarrow> int\" and n :: int\nassumes h0 : \"\\<forall>n. N n = N (n - 1) + 2 * N (n - 2) + 2 * N (n - 3)\"\nand h1 : \"N 0 = 1\"\nand h2 : \"N 1 = 3\"\nand h3 : \"N 2 = 8\"\nshows  \"(N 10) mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem\nfixes N :: \"int \\<Rightarrow> int\" and n :: int\nassumes h0 : \"\\<forall>n. N n = N (n - 1) + 2 * N (n - 2) + 2 * N (n - 3)\"\nand h1 : \"N 0 = 1\"\nand h2 : \"N 1 = 3\"\nand h3 : \"N 2 = 8\"\nshows  \"(N 10) mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "The sequence $N$ is defined by $N(0)=1$, $N(1)=3$, $N(2)=8$ and for all $n\\geq 3$, $N(n)=N(n-1)+2N(n-2)+2N(n-3)$. What is the remainder when $N(10)$ is divided by 1000? The final answer is 936."
    },
    "a_7": {
        "formal problem": "theorem\nfixes N :: nat\nassumes h0 : \"\\<forall> w. length w = 10 \\<and> (\\<forall> i < length w - 1. \n(w ! i = 'O' \\<longrightarrow> (\\<exists> j k > i. j < length w \\<and> k < length w \\<and> w ! j \\<noteq> 'O' \\<and> w ! k \\<noteq> 'O')))\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\ntheorem\nfixes N :: nat\nassumes h0 : \"\\<forall> w. length w = 10 \\<and> (\\<forall> i < length w - 1. \n(w ! i = 'O' \\<longrightarrow> (\\<exists> j k > i. j < length w \\<and> k < length w \\<and> w ! j \\<noteq> 'O' \\<and> w ! k \\<noteq> 'O')))\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Assume that you have a sequence of length 10. If any given element in the sequence is 'O', there exist two other elements in the sequence that are not 'O' and are positioned after the given element. Given this condition, find a natural number N such that the remainder when N is divided by 1000 equals 936. The final answer is N mod 1000 = 936."
    },
    "a_8": {
        "formal problem": "\n\ndatatype Zuminglish = M | O | P\n\ndefinition is_word :: \"Zuminglish list \\<Rightarrow> bool\" where\n\"is_word xs \\<longleftrightarrow> (\\<forall>i<length xs - 1. \n                   (xs ! i = O \\<and> xs ! (i+1) = O \\<longrightarrow> \n                   (\\<exists>j k. j < i \\<and> k > i+1 \\<and> j < k \\<and> (xs ! j \\<noteq> O) \\<and> (xs ! k \\<noteq> O))))\"\n\ndefinition N :: \"nat set\" where\n\"N = {n. \\<exists>xs. length xs = 10 \\<and> is_word xs \\<and> n = card (set xs)}\"\n\ntheorem \"N mod 1000 = 936\"\n\nThis is just a skeleton of the problem and does not provide the actual solution. The definition of 'is_word' might need to be adjusted according to the interpretation of the problem. The theorem is just a placeholder for the final result, the actual proof would depend on the precise definitions and might involve additional lemmas.",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\n\n\ndatatype Zuminglish = M | O | P\n\ndefinition is_word :: \"Zuminglish list \\<Rightarrow> bool\" where\n\"is_word xs \\<longleftrightarrow> (\\<forall>i<length xs - 1. \n                   (xs ! i = O \\<and> xs ! (i+1) = O \\<longrightarrow> \n                   (\\<exists>j k. j < i \\<and> k > i+1 \\<and> j < k \\<and> (xs ! j \\<noteq> O) \\<and> (xs ! k \\<noteq> O))))\"\n\ndefinition N :: \"nat set\" where\n\"N = {n. \\<exists>xs. length xs = 10 \\<and> is_word xs \\<and> n = card (set xs)}\"\n\ntheorem \"N mod 1000 = 936\"\n\nThis is just a skeleton of the problem and does not provide the actual solution. The definition of 'is_word' might need to be adjusted according to the interpretation of the problem. The theorem is just a placeholder for the final result, the actual proof would depend on the precise definitions and might involve additional lemmas.\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a language called Zuminglish that has only three letters: M, O, P. A word in Zuminglish is a list of these letters with the property that for every pair of consecutive O's in the word, there exists a letter before the first O in the pair and a letter after the second O in the pair, and these letters are not O. Let N be the set of all natural numbers n such that there exists a Zuminglish word of length 10 that contains exactly n distinct letters. \n\nWhat is the remainder when the sum of all elements in N is divided by 1000? The final answer is 936. \n\nPlease note that the actual problem would depend on the precise definitions and might involve additional conditions."
    },
    "a_9": {
        "formal problem": "fun Zuminglish :: \"char list \\<Rightarrow> bool\"\nwhere\n\"Zuminglish [] = True\"\n| \"Zuminglish (x#xs) = \n    (if x = 'O' \n     then case xs of \n          y#z#zs \\<Rightarrow> (y \\<noteq> 'O' \\<and> z \\<noteq> 'O' \\<and> Zuminglish zs)\n          | _ \\<Rightarrow> False\n     else Zuminglish xs)\"\n\ntheorem\nfixes N :: nat\nassumes h0 : \"N = card {s. length s = 10 \\<and> Zuminglish s}\"\nshows  \"N mod 1000 = 936\"",
        "formal solution": "(* ### Problem\n In Zuminglish, all words consist only of the letters $M, O,$ and $P$. As in English, $O$ is said to be a vowel and $M$ and $P$ are consonants. A string of $M's, O's,$ and $P's$ is a word in Zuminglish if and only if between any two $O's$ there appear at least two consonants. Let $N$ denote the number of $10$-letter Zuminglish words. Determine the remainder obtained when $N$ is divided by $1000$.\n The final Answer is 936\n ### Proof\n Let $a_n$ denote the number of $n$-letter words ending in two constants (CC), $b_n$ denote the number of $n$-letter words ending in a constant followed by a vowel (CV), and let $c_n$ denote the number of $n$-letter words ending in a vowel followed by a constant (VC - the only other combination, two vowels, is impossible due to the problem statement).\n Then, note that: We can only form a word of length $n+1$ with CC at the end by appending a constant ($M,P$) to the end of a word of length $n$ that ends in a constant.\n Thus, we have the recursion $a_{n+1} = 2(a_n + c_n)$, as there are two possible constants we can append.\n We can only form a word of length $n+1$ with a CV by appending $O$ to the end of a word of length $n$ that ends with CC. This is because we cannot append a vowel to VC, otherwise we'd have two vowels within $2$ characters of each other.\n Thus, $b_{n+1} = a_n$.\n We can only form a word of length $n+1$ with a VC by appending a constant to the end of a word of length $n$ that ends with CV.\n Thus, $c_{n+1} = 2b_n$.\n Using those three recursive rules, and that $a_2 = 4, b_2 = 2, c_2=2$, we can make a table:\\[\\begin{array}{|r||r|r|r|} \\hline &a_n&b_n&c_n \\\\ \\hline 2 & 4 & 2 & 2 \\\\ 3 & 12 & 4 & 4 \\\\ 4 & 32 & 12 & 8 \\\\ 5 & 80 & 32 & 24 \\\\ 6 & 208 & 80 & 64 \\\\ 7 & 544 & 208 & 160 \\\\ 8 & 408 & 544 & 416 \\\\ 9 & 648 & 408 & 88 \\\\ 10 & 472 & 648 & 816 \\\\ \\hline \\end{array}\\]For simplicity, we used $\\mod 1000$.\n Thus, the answer is $a_{10} + b_{10} + c_{10} \\equiv \\boxed{936} \\pmod{1000}$.\n *)\n\nfun Zuminglish :: \"char list \\<Rightarrow> bool\"\nwhere\n\"Zuminglish [] = True\"\n| \"Zuminglish (x#xs) = \n    (if x = 'O' \n     then case xs of \n          y#z#zs \\<Rightarrow> (y \\<noteq> 'O' \\<and> z \\<noteq> 'O' \\<and> Zuminglish zs)\n          | _ \\<Rightarrow> False\n     else Zuminglish xs)\"\n\ntheorem\nfixes N :: nat\nassumes h0 : \"N = card {s. length s = 10 \\<and> Zuminglish s}\"\nshows  \"N mod 1000 = 936\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Count the number of 10-letter sequences that can be formed such that no three consecutive letters are 'O'. Then find the remainder when this count is divided by 1000. The final answer is 936."
    },
    "level": "Level 5",
    "type": "Intermediate Algebra"
}