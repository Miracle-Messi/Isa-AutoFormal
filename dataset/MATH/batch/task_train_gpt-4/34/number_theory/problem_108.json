{
    "natural problem": "Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2.",
    "natural solution": [
        "We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.",
        "Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}",
        "& 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.",
        "Thus, the sum is equal to $\\boxed{110111}_2$."
    ],
    "natural answer": "110111",
    "a_0": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat (int_of_string \"\nand h1 : \" 2)\"\nand h2 : \"b = nat (int_of_string \"\nand h3 : \" 2)\"\nshows  \"string_of_int (int (a * b)) 2 = \"110111\"\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat (int_of_string \"\nand h1 : \" 2)\"\nand h2 : \"b = nat (int_of_string \"\nand h3 : \" 2)\"\nshows  \"string_of_int (int (a * b)) 2 = \"110111\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Calculate the product of two natural numbers, both equal to 2. Express the result in binary notation. The final answer is '110111'."
    },
    "a_1": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat_of_bin [1, 0, 1, 1]\"\nand h1 : \"b = nat_of_bin [1, 0, 1]\"\nshows  \"bin_of_nat (a * b) = [1, 1, 0, 1, 1, 1]\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat_of_bin [1, 0, 1, 1]\"\nand h1 : \"b = nat_of_bin [1, 0, 1]\"\nshows  \"bin_of_nat (a * b) = [1, 1, 0, 1, 1, 1]\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the product of the binary numbers 1011 and 101, and represent the product in binary form. The final answer is 110111."
    },
    "a_2": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = 11\"\nand h1 : \"b = 5\"\nshows  \"a * b = 55\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = 11\"\nand h1 : \"b = 5\"\nshows  \"a * b = 55\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "\"What is the product of 11 and 5? The final answer is 55.\""
    },
    "a_3": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of BL [True, False, True, True])\"\nand h1 : \"b = nat (bin_of BL [True, False, True])\"\nshows  \"a * b = nat (bin_of BL [True, True, False, True, True, True])\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of BL [True, False, True, True])\"\nand h1 : \"b = nat (bin_of BL [True, False, True])\"\nshows  \"a * b = nat (bin_of BL [True, True, False, True, True, True])\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Translate the binary numbers 1011 and 101 to decimal, multiply them together, and convert the result back to binary. The final answer should be 111011."
    },
    "a_4": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nshows  \"string_of_bin (bin_of_nat (a * b)) = \"110111\"\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of_string \"\nand h1 : \")\"\nand h2 : \"b = nat (bin_of_string \"\nand h3 : \")\"\nshows  \"string_of_bin (bin_of_nat (a * b)) = \"110111\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given two binary numbers represented as strings, multiply them together to get another binary number. If the result is the binary representation of \"110111\", what are the original two binary numbers?"
    },
    "a_5": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = bin_of_nat 11\"\nand h1 : \"b = bin_of_nat 5\"\nshows  \"a * b = bin_of_nat 55\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = bin_of_nat 11\"\nand h1 : \"b = bin_of_nat 5\"\nshows  \"a * b = bin_of_nat 55\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "What is the product of the binary representations of the natural numbers 11 and 5? The final answer is the binary representation of the natural number 55."
    },
    "a_6": {
        "formal problem": "theorem\nfixes a b :: \"int\"\nassumes h0 : \"a = bin_of_string \"\nand h1 : \"\"\nand h2 : \"b = bin_of_string \"\nand h3 : \"\"\nshows  \"string_of_bin (a * b) = \"110111\"\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: \"int\"\nassumes h0 : \"a = bin_of_string \"\nand h1 : \"\"\nand h2 : \"b = bin_of_string \"\nand h3 : \"\"\nshows  \"string_of_bin (a * b) = \"110111\"\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find two binary numbers such that when multiplied together, they yield the binary number 110111."
    },
    "a_7": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of BL [One, Zero, One, One])\"\nand h1 : \"b = nat (bin_of BL [One, Zero, One])\"\nshows  \"a * b = nat (bin_of BL [One, One, Zero, One, One, One])\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat (bin_of BL [One, Zero, One, One])\"\nand h1 : \"b = nat (bin_of BL [One, Zero, One])\"\nshows  \"a * b = nat (bin_of BL [One, One, Zero, One, One, One])\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the product of two binary numbers, 1011 and 101. The final answer should be given in binary notation, which is 110111."
    },
    "a_8": {
        "formal problem": "theorem\nfixes a b :: int\nassumes h0 : \"a = bin_of_str '1011'\"\nand h1 : \"b = bin_of_str '101'\"\nshows  \"str_of_bin (a * b) = '110111'\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: int\nassumes h0 : \"a = bin_of_str '1011'\"\nand h1 : \"b = bin_of_str '101'\"\nshows  \"str_of_bin (a * b) = '110111'\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the product of the binary numbers 1011 and 101. What is the resulting binary number? The final answer is 110111."
    },
    "a_9": {
        "formal problem": "theorem\nfixes a b :: nat\nassumes h0 : \"a = nat (int_of_string_base 2 '1011')\"\nand h1 : \"b = nat (int_of_string_base 2 '101')\"\nshows  \"nat_to_string_base 2 (a * b) = '110111'\"",
        "formal solution": "(* ### Problem\n Find the product of $1011_2 \\cdot 101_2$.  Express your answer in base 2. The final Answer is 110111\n ### Proof\n We carry out the multiplication as we carry out multiplication in base $10$. Fortunately, we do not have to worry about carrying over, since we are only multiplying by digits of $0$ or $1$.\n Thus:  $$ \\begin{array}{@{}c@{\\;}c@{}c@{}c@{}c@{}c@{}c} & & & 1 & 0 & 1 & 1_2 \\\\ & & & \\times & 1 & 0 & 1_2 \\\\ \\cline{4-7} & & & 1 & 0 & 1 & 1_2 \\\\ & & 0 & 0 & 0 & 0 & 0_2 \\\\ + & 1 & 0 & 1 & 1 & 0 & 0_2 \\\\ \\cline{1-7}\n & 1 & 1 & 0 & 1 & 1 & 1_2 \\\\ \\end{array}$$When summing, we need to carry-over for the second digit from the left.\n Thus, the sum is equal to $\\boxed{110111}_2$.\n *)\n\ntheorem\nfixes a b :: nat\nassumes h0 : \"a = nat (int_of_string_base 2 '1011')\"\nand h1 : \"b = nat (int_of_string_base 2 '101')\"\nshows  \"nat_to_string_base 2 (a * b) = '110111'\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Multiply the binary numbers 1011 and 101. The final answer is 110111."
    },
    "level": "Level 4",
    "type": "Number Theory"
}