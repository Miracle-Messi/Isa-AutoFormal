{
    "natural problem": "The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500?",
    "natural solution": [
        "The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.",
        "So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits."
    ],
    "natural answer": "40",
    "a_0": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = int_of_digits (rev (digits n)))\"\nand h1 : \"card {n. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500} = 40\"\nshows  \"\\<exists> M. card M = 40 \\<and> (\\<forall> n \\<in> M. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500)\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall> n. is_palindrome n = (n = int_of_digits (rev (digits n)))\"\nand h1 : \"card {n. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500} = 40\"\nshows  \"\\<exists> M. card M = 40 \\<and> (\\<forall> n \\<in> M. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromic numbers are there between 100 and 500 (inclusive)? The final answer is 40."
    },
    "a_1": {
        "formal problem": "theorem\nfixes count_palindromes :: \"int \\<Rightarrow> int \\<Rightarrow> int\"\nassumes h0 : \"count_palindromes 100 500 = 40\"\nshows  \"count_palindromes 100 500 = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes count_palindromes :: \"int \\<Rightarrow> int \\<Rightarrow> int\"\nassumes h0 : \"count_palindromes 100 500 = 40\"\nshows  \"count_palindromes 100 500 = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromes are there between 100 and 500? The final answer is 40."
    },
    "a_2": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (\\<exists>x y. n = x * 100 + y * 10 + x \\<and> x \\<ge> 1 \\<and> y \\<ge> 0)\"\nshows  \"card {n. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500} = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (\\<exists>x y. n = x * 100 + y * 10 + x \\<and> x \\<ge> 1 \\<and> y \\<ge> 0)\"\nshows  \"card {n. is_palindrome n \\<and> n \\<ge> 100 \\<and> n \\<le> 500} = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A palindrome is an integer that reads the same forward and backward. A three-digit palindrome can be represented as $n = x * 100 + y * 10 + x$ with $x \\ge 1$ and $y \\ge 0$. How many three-digit palindromes are there between 100 and 500? The final answer is 40."
    },
    "a_3": {
        "formal problem": "function is_palindrome :: \"int \\<Rightarrow> bool\" where\n  \"is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\n\ntheorem count_integer_palindromes_between_100_and_500 :\n  \"card {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n} = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\nfunction is_palindrome :: \"int \\<Rightarrow> bool\" where\n  \"is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\n\ntheorem count_integer_palindromes_between_100_and_500 :\n  \"card {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n} = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A function \"is_palindrome\" checks if an integer is a palindrome (reads the same forwards and backwards). How many palindrome integers are there between 100 and 500? The final answer is 40."
    },
    "a_4": {
        "formal problem": "theorem\nfixes palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"{n. palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = {n. n \\<in> {100..500} \\<and> palindrome n}\"\nshows  \"card {n. palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"{n. palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = {n. n \\<in> {100..500} \\<and> palindrome n}\"\nshows  \"card {n. palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Find the number of palindromic integers between 100 and 500. The total count is 40."
    },
    "a_5": {
        "formal problem": "theorem\nfixes palindrome_count :: nat and is_palindrome :: \"nat \\<Rightarrow> bool\"\nassumes h0 : \"is_palindrome n = (n = rev n)\"\nand h1 : \"palindrome_count = card {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n}\"\nshows  \"palindrome_count = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes palindrome_count :: nat and is_palindrome :: \"nat \\<Rightarrow> bool\"\nassumes h0 : \"is_palindrome n = (n = rev n)\"\nand h1 : \"palindrome_count = card {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n}\"\nshows  \"palindrome_count = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromes are there between 100 and 500 (inclusive)? The final answer is 40."
    },
    "a_6": {
        "formal problem": "theorem\nfixes n :: nat and palindromes :: \"nat set\"\nassumes h0 : \"palindromes = {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> n = (rev nat) n}\"\nshows  \"card palindromes = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes n :: nat and palindromes :: \"nat set\"\nassumes h0 : \"palindromes = {n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> n = (rev nat) n}\"\nshows  \"card palindromes = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromes are there between 100 and 500, inclusive? The final answer is 40."
    },
    "a_7": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nshows  \"card {x::int. x \\<ge> 100 \\<and> x \\<le> 500 \\<and> is_palindrome x} = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nshows  \"card {x::int. x \\<ge> 100 \\<and> x \\<le> 500 \\<and> is_palindrome x} = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindrome numbers are there between 100 and 500 inclusive? The final answer is 40."
    },
    "a_8": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (\\<exists> a b. n = a * 100 + b * 10 + a \\<and> a > 0 \\<and> b \\<ge> 0 \\<and> a < 5)\"\nand h1 : \"card {n. is_palindrome n} = 40\"\nshows  \"\\<forall>n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n \\<longleftrightarrow> (\\<exists> a b. n = a * 100 + b * 10 + a \\<and> a > 0 \\<and> b \\<ge> 0 \\<and> a < 5)\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n \\<longleftrightarrow> (\\<exists> a b. n = a * 100 + b * 10 + a \\<and> a > 0 \\<and> b \\<ge> 0 \\<and> a < 5)\"\nand h1 : \"card {n. is_palindrome n} = 40\"\nshows  \"\\<forall>n. 100 \\<le> n \\<and> n \\<le> 500 \\<and> is_palindrome n \\<longleftrightarrow> (\\<exists> a b. n = a * 100 + b * 10 + a \\<and> a > 0 \\<and> b \\<ge> 0 \\<and> a < 5)\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A palindrome is a three-digit number that reads the same forward and backward. In a palindrome, the hundreds and units digits are the same, and the tens digit can be any digit from 0 to 9. A palindrome can be represented as $n = a * 100 + b * 10 + a$, where $a$ is the hundreds and units digits, and $b$ is the tens digit. There are 40 such palindromes. Determine the condition for a number $n$ to be a palindrome, given that $100 \\leq n \\leq 500$, $a > 0$, $b \\geq 0$, and $a < 5$."
    },
    "a_9": {
        "formal problem": "theorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"finite {n. is_palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500}\"\nshows  \"card {n. is_palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = 40\"",
        "formal solution": "(* ### Problem\n The number 121 is a palindrome, because it reads the same backwards as forward. How many integer palindromes are between 100 and 500? The final Answer is 40\n ### Proof\n The hundreds digit can be any one of 1, 2, 3 or 4. Whatever the hundreds digit is, that fixes what the units digit can be. Then, there are 10 choices for the middle (tens) digit.\n So, we can construct $4 \\cdot 10 = \\boxed{40}$ palindromes by choosing the digits.\n *)\n\ntheorem\nfixes is_palindrome :: \"int \\<Rightarrow> bool\"\nassumes h0 : \"\\<forall>n. is_palindrome n = (n = int_of_list (rev (list_of_int n)))\"\nand h1 : \"finite {n. is_palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500}\"\nshows  \"card {n. is_palindrome n \\<and> 100 \\<le> n \\<and> n \\<le> 500} = 40\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many palindromic numbers are there between 100 and 500? The final answer is 40."
    },
    "level": "Level 2",
    "type": "Counting & Probability"
}