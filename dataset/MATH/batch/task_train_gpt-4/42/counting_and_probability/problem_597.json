{
    "natural problem": "A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube.",
    "natural solution": [
        "Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).",
        "The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);",
        "void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);",
        "draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));",
        "label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));",
        "draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));",
        "label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));",
        "add(shift((2,3,0))*pic2);[/asy]"
    ],
    "natural answer": "3",
    "a_0": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_rotations cube = 3\"\nshows  \"distinct_rotations cube = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_rotations cube = 3\"\nshows  \"distinct_rotations cube = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Given a function \"cube\" that maps natural numbers to natural numbers as follows: cube(1) = 1, cube(2) = 2, and cube(3) = 3. There are 3 distinct rotations of this function. Confirm that the number of distinct rotations of the \"cube\" function is indeed 3."
    },
    "a_1": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_rotations cube = {cube}\"\nshows  \"card(distinct_rotations cube) = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_rotations cube = {cube}\"\nshows  \"card(distinct_rotations cube) = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Define a function \"cube\" such that cube(1) = 1, cube(2) = 2, and cube(3) = 3. Let \"distinct_rotations\" be a function that returns all distinct rotations of the input function. If the only distinct rotation of \"cube\" is itself, find the number of elements in the set of distinct rotations of \"cube\". The final answer is 3."
    },
    "a_2": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_cube_orientations cube\"\nshows  \"number_of_distinct_cubes cube = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct_cube_orientations cube\"\nshows  \"number_of_distinct_cubes cube = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a function \"cube\" that maps natural numbers to the number of distinct cube orientations. Given that the function is defined as follows: cube(1) = 1, cube(2) = 2, and cube(3) = 3, and all cube orientations are distinct, find the total number of distinct cubes. The final answer is 3."
    },
    "a_3": {
        "formal problem": "theorem\nfixes cube :: \"('a \\<Rightarrow> 'b) set\"\nand paint :: \"'a \\<Rightarrow> 'b\"\nand count :: nat\nassumes h0 : \"card {s. paint s = 'blue'} = 1\"\nand h1 : \"card {s. paint s = 'red'} = 2\"\nand h2 : \"card {s. paint s = 'green'} = 3\"\nand h3 : \"\\<forall> c1 c2. c1 \\<in> cube \\<and> c2 \\<in> cube \\<and> (\\<exists> r. rotate c1 r = c2) \\<longrightarrow> c1 = c2\"\nshows  \"count = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"('a \\<Rightarrow> 'b) set\"\nand paint :: \"'a \\<Rightarrow> 'b\"\nand count :: nat\nassumes h0 : \"card {s. paint s = 'blue'} = 1\"\nand h1 : \"card {s. paint s = 'red'} = 2\"\nand h2 : \"card {s. paint s = 'green'} = 3\"\nand h3 : \"\\<forall> c1 c2. c1 \\<in> cube \\<and> c2 \\<in> cube \\<and> (\\<exists> r. rotate c1 r = c2) \\<longrightarrow> c1 = c2\"\nshows  \"count = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There is a cube with different colored sides. One side is painted blue, two sides are painted red, and three sides are painted green. If any two sides of the cube are the same color, they are considered identical. How many distinct orientations can the cube have? The final answer is 3."
    },
    "a_4": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct (map cube [1, 2, 3])\"\nshows  \"card {C. \\<exists>f. (\\<forall>i. f i = cube i) \\<and> (\\<forall>j. j \\<in> {1, 2, 3} \\<longrightarrow> C j = f j)} = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = 1\"\nand h1 : \"cube 2 = 2\"\nand h2 : \"cube 3 = 3\"\nand h3 : \"distinct (map cube [1, 2, 3])\"\nshows  \"card {C. \\<exists>f. (\\<forall>i. f i = cube i) \\<and> (\\<forall>j. j \\<in> {1, 2, 3} \\<longrightarrow> C j = f j)} = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "Consider a function $cube(n)$ with the following properties: $cube(1)=1$, $cube(2)=2$, and $cube(3)=3$. Furthermore, the values of $cube(n)$ for $n=1, 2, 3$ are distinct. Determine the number of distinct sets $C$ such that there exists a function $f$ with $f(i)=cube(i)$ for all $i$, and for all $j$ in the set $\\{1, 2, 3\\}$, $C(j) = f(j)$. The final answer is 3."
    },
    "a_5": {
        "formal problem": "theorem\nfixes cube_painting :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube_painting 1 = 1\"\nand h1 : \"cube_painting 2 = 2\"\nand h2 : \"cube_painting 3 = 3\"\nand h3 : \"\\<forall>n. n \\<ge> 1 \\<and> n \\<le> 3 \\<longrightarrow> cube_painting n = n\"\nand h4 : \"\\<forall>n. n \\<ge> 4 \\<longrightarrow> cube_painting n = cube_painting (n - 3)\"\nshows  \"cube_painting 6 = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube_painting :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube_painting 1 = 1\"\nand h1 : \"cube_painting 2 = 2\"\nand h2 : \"cube_painting 3 = 3\"\nand h3 : \"\\<forall>n. n \\<ge> 1 \\<and> n \\<le> 3 \\<longrightarrow> cube_painting n = n\"\nand h4 : \"\\<forall>n. n \\<ge> 4 \\<longrightarrow> cube_painting n = cube_painting (n - 3)\"\nshows  \"cube_painting 6 = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A cube painting process is defined such that the number of painted cubes follows the pattern: 1, 2, 3, 1, 2, 3, and so on. In other words, the first cube is painted with 1 color, the second with 2 colors, and the third with 3 colors, after which the pattern repeats. What is the number of colors used to paint the 6th cube? The final answer is 3."
    },
    "a_6": {
        "formal problem": "theorem\nfixes cubes :: nat\nassumes h0 : \"cubes = card {C :: (nat \\<Rightarrow> nat) \\<Rightarrow> nat. (\\<exists>blue red green. C blue = 1 \\<and> C red = 2 \\<and> C green = 3) \\<and> (\\<forall> R. (C o R) \\<in> {C} \\<longleftrightarrow> (\\<exists>rotations. R = rotations))}\"\nshows  \"cubes = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cubes :: nat\nassumes h0 : \"cubes = card {C :: (nat \\<Rightarrow> nat) \\<Rightarrow> nat. (\\<exists>blue red green. C blue = 1 \\<and> C red = 2 \\<and> C green = 3) \\<and> (\\<forall> R. (C o R) \\<in> {C} \\<longleftrightarrow> (\\<exists>rotations. R = rotations))}\"\nshows  \"cubes = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "How many distinct cubes can be formed by using one blue, one red, and one green face, considering rotations as equivalent? The final answer is 3."
    },
    "a_7": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = blue\"\nand h1 : \"cube 2 = red\"\nand h2 : \"cube 3 = red\"\nand h3 : \"cube 4 = green\"\nand h4 : \"cube 5 = green\"\nand h5 : \"cube 6 = green\"\nand h6 : \"\\<forall> i j. i \\<noteq> j \\<and> i \\<ge> 1 \\<and> i \\<le> 6 \\<and> j \\<ge> 1 \\<and> j \\<le> 6 \\<longrightarrow> cube i \\<noteq> cube j\"\nand h7 : \"distinct_orientations cube = 3\"\nshows  \"distinct_orientations cube = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat\"\nassumes h0 : \"cube 1 = blue\"\nand h1 : \"cube 2 = red\"\nand h2 : \"cube 3 = red\"\nand h3 : \"cube 4 = green\"\nand h4 : \"cube 5 = green\"\nand h5 : \"cube 6 = green\"\nand h6 : \"\\<forall> i j. i \\<noteq> j \\<and> i \\<ge> 1 \\<and> i \\<le> 6 \\<and> j \\<ge> 1 \\<and> j \\<le> 6 \\<longrightarrow> cube i \\<noteq> cube j\"\nand h7 : \"distinct_orientations cube = 3\"\nshows  \"distinct_orientations cube = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There are six cubes numbered from 1 to 6. Cube 1 is blue, cubes 2 and 3 are red, and cubes 4, 5, and 6 are green. No two cubes with different numbers have the same color. There are three distinct orientations for arranging these cubes. Confirm that there are indeed three distinct orientations for arranging the cubes."
    },
    "a_8": {
        "formal problem": "theorem\nfixes cube :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> cube. cube 1 = blue \\<and> cube 2 = red \\<and> cube 3 = red \\<and> cube 4 = green \\<and> cube 5 = green \\<and> cube 6 = green\"\nand h1 : \"distinct_rotations cube = {cube1, cube2, cube3}\"\nshows  \"card (distinct_rotations cube) = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes cube :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\nassumes h0 : \"\\<forall> cube. cube 1 = blue \\<and> cube 2 = red \\<and> cube 3 = red \\<and> cube 4 = green \\<and> cube 5 = green \\<and> cube 6 = green\"\nand h1 : \"distinct_rotations cube = {cube1, cube2, cube3}\"\nshows  \"card (distinct_rotations cube) = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "A set of cubes has distinct colors on their faces, with cube 1 being blue, cube 2 and 3 being red, and cube 4, 5, and 6 being green. There are three distinct rotations of these cubes, represented by cube1, cube2, and cube3. How many distinct rotations are there? The final answer is 3."
    },
    "a_9": {
        "formal problem": "theorem\nfixes blue_sides red_sides green_sides :: nat\nassumes h0 : \"blue_sides = 1\"\nand h1 : \"red_sides = 2\"\nand h2 : \"green_sides = 3\"\nshows  \"number_of_distinct_cubes = 3\"",
        "formal solution": "(* ### Problem\n A cube is painted so that one side is blue, two sides are red, and three sides are green. How many different such cubes can be painted? Two cubes are considered the same if one cube can be rotated in any way to match the second cube. The final Answer is 3\n ### Proof\n Orient the cube so that the blue face is on top. At least one red face must be adjacent to the blue face, and the other red face can be in one of $\\boxed{3}$ distinct positions relative to these two (see figure).\n The green faces are determined by the placement of the red and blue faces. [asy] import three; size(250); defaultpen(linewidth(0.7)); settings.prc=false; settings.render=0; currentprojection=orthographic(30,-20,15);\n void drawCube (picture pic=currentpicture, real a, real b, real c) { draw(pic,shift(a,b,c)*surface((0,0,1)--(0,1,1)--(1,1,1)--(1,0,1)--cycle),white,black+linewidth(1.0),nolight); draw(pic,shift(a,b,c)*surface((1,0,0)--(1,0,1)--(1,1,1)--(1,1,0)--cycle),white,black+linewidth(1.0),nolight);\n draw(pic,shift(a,b,c)*surface((0,0,0)--(1,0,0)--(1,0,1)--(0,0,1)--cycle),white,black+linewidth(1.0),nolight); } drawCube(0,0,0); label(scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2));\n label(scale(2.5)*project(\"R\",X,Z),(1/2,0,1/2)); picture pic1; drawCube(pic1,0,0,0); label(pic1,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic1,scale(2.5)*project(\"R\",Y,Z),(0,1/2,1/2));\n draw(pic1,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic1,(0,1,0)--(1,1,0),linetype(\"2 3\")); add(shift((1,1.5,0))*pic1); picture pic2; drawCube(pic2,0,0,0); label(pic2,scale(2.5)*project(\"B\",Y,-X),(1/2,1/2,1));\n label(pic2,scale(2.5)*project(\"R\",Y,Z),(1,1/2,1/2)); label(pic2,scale(2.5)*project(\"R\",Y,-X),(1/2,1/2,0)); draw(pic2,(0,0,0)--(0,1,0)--(0,1,1),linetype(\"2 3\")); draw(pic2,(0,1,0)--(1,1,0),linetype(\"2 3\"));\n add(shift((2,3,0))*pic2);[/asy]\n *)\n\ntheorem\nfixes blue_sides red_sides green_sides :: nat\nassumes h0 : \"blue_sides = 1\"\nand h1 : \"red_sides = 2\"\nand h2 : \"green_sides = 3\"\nshows  \"number_of_distinct_cubes = 3\"\n proof- \n  show ?thesis sledgehammer",
        "informal problem": "There are three distinct cubes: one with 1 blue side, one with 2 red sides, and one with 3 green sides. How many distinct cubes are there? The final answer is 3."
    },
    "level": "Level 5",
    "type": "Counting & Probability"
}